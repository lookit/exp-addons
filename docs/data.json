{
    "project": {
        "url": "https://github.com/lookit/exp-addons",
        "projectLogo": "../themes/lookit/assets/css/logo.png",
        "name": "exp-player",
        "description": "The Experimenter player and associated components",
        "version": "0.5.1"
    },
    "files": {
        "addon/components/exp-exit-survey/component.js": {
            "name": "addon/components/exp-exit-survey/component.js",
            "modules": {
                "frames": 1
            },
            "classes": {
                "ExpExitSurvey": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/components/exp-frame-base/component.js": {
            "name": "addon/components/exp-frame-base/component.js",
            "modules": {},
            "classes": {
                "ExpFrameBase": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/components/exp-lookit-dialogue-page/component.js": {
            "name": "addon/components/exp-lookit-dialogue-page/component.js",
            "modules": {},
            "classes": {
                "ExpLookitDialoguePage": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/components/exp-lookit-exit-survey/component.js": {
            "name": "addon/components/exp-lookit-exit-survey/component.js",
            "modules": {},
            "classes": {
                "ExpLookitExitSurvey": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/components/exp-lookit-geometry-alternation/component.js": {
            "name": "addon/components/exp-lookit-geometry-alternation/component.js",
            "modules": {},
            "classes": {
                "ExpLookitGeometryAlternation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/components/exp-lookit-instructions/component.js": {
            "name": "addon/components/exp-lookit-instructions/component.js",
            "modules": {},
            "classes": {
                "ExpLookitInstructions": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/components/exp-lookit-mood-questionnaire/component.js": {
            "name": "addon/components/exp-lookit-mood-questionnaire/component.js",
            "modules": {},
            "classes": {
                "ExpLookitMoodQuestionnaire": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/components/exp-lookit-observation/component.js": {
            "name": "addon/components/exp-lookit-observation/component.js",
            "modules": {},
            "classes": {
                "ExpLookitObservation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/components/exp-lookit-preferential-looking/component.js": {
            "name": "addon/components/exp-lookit-preferential-looking/component.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "addon/components/exp-lookit-preview-explanation/component.js": {
            "name": "addon/components/exp-lookit-preview-explanation/component.js",
            "modules": {},
            "classes": {
                "ExpLookitPreviewExplanation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/components/exp-lookit-story-page/component.js": {
            "name": "addon/components/exp-lookit-story-page/component.js",
            "modules": {},
            "classes": {
                "ExpLookitStoryPage": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/components/exp-lookit-survey/component.js": {
            "name": "addon/components/exp-lookit-survey/component.js",
            "modules": {},
            "classes": {
                "ExpLookitSurvey": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/components/exp-lookit-text/component.js": {
            "name": "addon/components/exp-lookit-text/component.js",
            "modules": {},
            "classes": {
                "ExpLookitText": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/components/exp-lookit-video/component.js": {
            "name": "addon/components/exp-lookit-video/component.js",
            "modules": {},
            "classes": {
                "ExpLookitVideo": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/components/exp-lookit-video-consent/component.js": {
            "name": "addon/components/exp-lookit-video-consent/component.js",
            "modules": {},
            "classes": {
                "ExpLookitVideoConsent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/components/exp-player/component.js": {
            "name": "addon/components/exp-player/component.js",
            "modules": {
                "components": 1
            },
            "classes": {
                "ExpPlayer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/components/exp-video-config/component.js": {
            "name": "addon/components/exp-video-config/component.js",
            "modules": {},
            "classes": {
                "ExpVideoConfig": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/components/exp-video-config-quality/component.js": {
            "name": "addon/components/exp-video-config-quality/component.js",
            "modules": {},
            "classes": {
                "ExpVideoConfigQuality": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/components/exp-video-consent/component.js": {
            "name": "addon/components/exp-video-consent/component.js",
            "modules": {},
            "classes": {
                "ExpVideoConsent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/components/exp-video-preview/component.js": {
            "name": "addon/components/exp-video-preview/component.js",
            "modules": {},
            "classes": {
                "ExpVideoPreview": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/mixins/full-screen.js": {
            "name": "addon/mixins/full-screen.js",
            "modules": {
                "mixins": 1
            },
            "classes": {
                "FullScreen": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/mixins/media-reload.js": {
            "name": "addon/mixins/media-reload.js",
            "modules": {},
            "classes": {
                "MediaReload": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/mixins/video-record.js": {
            "name": "addon/mixins/video-record.js",
            "modules": {},
            "classes": {
                "VideoRecordMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/randomizers/permute.js": {
            "name": "addon/randomizers/permute.js",
            "modules": {
                "randomizers": 1
            },
            "classes": {
                "permute": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/randomizers/pref-phys.js": {
            "name": "addon/randomizers/pref-phys.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "addon/randomizers/random-parameter-set.js": {
            "name": "addon/randomizers/random-parameter-set.js",
            "modules": {},
            "classes": {
                "randomParameterSet": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/services/video-recorder.js": {
            "name": "addon/services/video-recorder.js",
            "modules": {
                "services": 1
            },
            "classes": {
                "VideoRecorderObject": 1,
                "videoRecorder": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/yuidoc-prose.js": {
            "name": "addon/yuidoc-prose.js",
            "modules": {
                "exp-player": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "exp-player": {
            "name": "exp-player",
            "submodules": {
                "frames": 1,
                "components": 1,
                "mixins": 1,
                "randomizers": 1,
                "services": 1
            },
            "elements": {},
            "classes": {
                "ExpExitSurvey": 1,
                "ExpFrameBase": 1,
                "ExpLookitDialoguePage": 1,
                "ExpLookitExitSurvey": 1,
                "ExpLookitGeometryAlternation": 1,
                "ExpLookitInstructions": 1,
                "ExpLookitMoodQuestionnaire": 1,
                "ExpLookitObservation": 1,
                "ExpLookitVideo": 1,
                "ExpLookitPreviewExplanation": 1,
                "ExpLookitStoryPage": 1,
                "ExpLookitSurvey": 1,
                "ExpLookitText": 1,
                "ExpLookitVideoConsent": 1,
                "ExpPlayer": 1,
                "ExpVideoConfig": 1,
                "ExpVideoConfigQuality": 1,
                "ExpVideoConsent": 1,
                "ExpVideoPreview": 1,
                "FullScreen": 1,
                "MediaReload": 1,
                "VideoRecordMixin": 1,
                "permute": 1,
                "randomParameterSet": 1,
                "VideoRecorderObject": 1,
                "videoRecorder": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "addon/services/video-recorder.js",
            "line": 321,
            "description": "Reusable parts of experiments. Includes frame definitions, randomizers, and utilities.",
            "itemtype": "main"
        },
        "frames": {
            "name": "frames",
            "submodules": {},
            "elements": {},
            "classes": {
                "ExpExitSurvey": 1,
                "ExpFrameBase": 1,
                "ExpLookitDialoguePage": 1,
                "ExpLookitExitSurvey": 1,
                "ExpLookitGeometryAlternation": 1,
                "ExpLookitInstructions": 1,
                "ExpLookitMoodQuestionnaire": 1,
                "ExpLookitObservation": 1,
                "ExpLookitVideo": 1,
                "ExpLookitPreviewExplanation": 1,
                "ExpLookitStoryPage": 1,
                "ExpLookitSurvey": 1,
                "ExpLookitText": 1,
                "ExpLookitVideoConsent": 1,
                "ExpVideoConfig": 1,
                "ExpVideoConfigQuality": 1,
                "ExpVideoConsent": 1,
                "ExpVideoPreview": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "exp-player",
            "namespace": "",
            "file": "addon/components/exp-video-preview/component.js",
            "line": 13,
            "description": "Reusable frames that can be used as part of user-defined experiments. This is the main reference for researchers\n  looking to build their own experiment definitions on the experimenter platform.",
            "tag": "main",
            "itemtype": "main"
        },
        "components": {
            "name": "components",
            "submodules": {},
            "elements": {},
            "classes": {
                "ExpPlayer": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "exp-player",
            "namespace": "",
            "file": "addon/components/exp-player/component.js",
            "line": 16,
            "description": "Reusable components for UI rendering and interactivity",
            "tag": "main",
            "itemtype": "main"
        },
        "mixins": {
            "name": "mixins",
            "submodules": {},
            "elements": {},
            "classes": {
                "FullScreen": 1,
                "MediaReload": 1,
                "VideoRecordMixin": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "exp-player",
            "namespace": "",
            "file": "addon/mixins/video-record.js",
            "line": 12,
            "description": "Mixins that can be used to add functionality to specific frames",
            "tag": "main",
            "itemtype": "main"
        },
        "randomizers": {
            "name": "randomizers",
            "submodules": {},
            "elements": {},
            "classes": {
                "permute": 1,
                "randomParameterSet": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "exp-player",
            "namespace": "",
            "file": "addon/randomizers/random-parameter-set.js",
            "line": 8,
            "description": "Reusable randomizers that can be used as part of user-defined experiments.\nRandomizers allow researchers to specify how to select which frames or\nsequences of frames to use as part of a particular session of a given\nexperiment, for instance in order to counterbalance stimuli used across\nsubjects, assign subjects randomly to different experimental conditions, or\nimplement a longitudinal design where the frames used in this study depend on\nthe frames used in the participant's last session.",
            "tag": "main",
            "itemtype": "main"
        },
        "services": {
            "name": "services",
            "submodules": {},
            "elements": {},
            "classes": {
                "VideoRecorderObject": 1,
                "videoRecorder": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "exp-player",
            "namespace": "",
            "file": "addon/services/video-recorder.js",
            "line": 321,
            "description": "Services used to provide centralized functionality",
            "tag": "main",
            "itemtype": "main"
        }
    },
    "classes": {
        "ExpExitSurvey": {
            "name": "ExpExitSurvey",
            "shortname": "ExpExitSurvey",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames",
            "namespace": "",
            "file": "addon/components/exp-exit-survey/component.js",
            "line": 16,
            "description": "This is the exit survey used by \"Your baby the physicist\". Use the updated frame {{#crossLink \"ExpLookitExitSurvey\"}}{{/crossLink}} instead.",
            "extends": "ExpFrameBase",
            "uses": [
                "Validations",
                "FullScreen"
            ]
        },
        "ExpFrameBase": {
            "name": "ExpFrameBase",
            "shortname": "ExpFrameBase",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames",
            "namespace": "",
            "file": "addon/components/exp-frame-base/component.js",
            "line": 11,
            "description": "This provides common base behavior required for any experiment frame. All experiment frames must extend this one.\nThis frame has no configuration options because all of its logic is internal, and is almost never directly used\n   in an experiment. It exports no data. Sample experiment definition usage (provided for completeness):\n  ```json\n    \"frames\": {\n       \"my-sample-frame\": {\n         \"kind\": \"exp-base-frame\"\n       }\n    }\n ```\nAs a user you will almost never need to insert a component into a template directly- the platform should handle that\n   by automatically inserting `exp-player` when your experiment starts.\n However, a sample template usage is provided below for completeness.\n```handlebars\n  {{\n      component currentFrameTemplate\n        frameIndex=frameIndex\n        framePage=framePage\n        updateFramePage=(action 'updateFramePage')\n        frameConfig=currentFrameConfig\n        frameContext=currentFrameContext\n       session=session\n        experiment=experiment\n       next=(action 'next')\n        previous=(action 'previous')\n        saveHandler=(action 'saveFrame')\n        skipone=(action 'skipone')\n        sessionCompleted=(action 'sessionCompleted')\n       extra=extra\n    }}\n ```",
            "uses": [
                "FullScreen"
            ]
        },
        "ExpLookitDialoguePage": {
            "name": "ExpLookitDialoguePage",
            "shortname": "ExpLookitDialoguePage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames",
            "namespace": "",
            "file": "addon/components/exp-lookit-dialogue-page/component.js",
            "line": 16,
            "description": "Frame to implement a storybook page with dialogue spoken by characters.\nFirst, characters appear and any main narration audio is played.\nNext, the user can click on the characters to play additional audio\nassociated with each character image, or (for a choice trial) the user clicks\none of the images to select it as an answer. Once main narration audio has\nbeen played and either a selection has been made (for a choice trial,\nisChoiceFrame: true) or all\nrequired character audio has been played (for a non-choice trial), the user\ncan proceed by pressing 'next'. (A trial with only main narration audio can\nalso simply auto-proceed when audio is finished.)\n\nRecording is optional. If webcam recording is conducted (doRecording: true)\nthen audio does not start until recording does, to ensure the entire trial\nis recorded.\n\nThe character images are specified in 'images', including an image source,\npositioning on the screen, any animation at the start of the trial, any\nassociated audio, and whether that audio is required.\n\nThis frame is displayed fullscreen; if the frame before it is not, that frame\nneeds to include a manual \"next\" button so that there's a user interaction\nevent to trigger fullscreen mode. (Browsers don't allow us to switch to FS\nwithout a user event.)\n\nThe examples below show a few expected uses of this frame. In phase-2,\ntwo characters are shown; the protagonist is already present, and speaker1\nflies in from the left. Speaker1 has associated audio (dialogue). After\nthe narrative audio, the user can click on speaker1 to play the audio, and\nwill then be able to proceed.\n\nphase-5 is a choice trial, where the user has to click on one of the two\nimages before proceeding.\n\n```json\n\"frames\":\n       \"phase-2\": {\n           \"kind\": \"exp-lookit-dialogue-page\",\n           \"id\": \"phase-2\",\n           \"baseDir\": \"https://s3.amazonaws.com/lookitcontents/politeness/\",\n           \"audioTypes\": [\"mp3\", \"ogg\"],\n           \"backgroundImage\": \"order1_test1_background.png\",\n           \"doRecording\": false,\n           \"autoProceed\": false,\n           \"parentTextBlock\": {\n               \"title\": \"Parents!\",\n               \"text\": \"some instructions\",\n               \"emph\": true,\n               \"css\": {\n                   \"color\": \"red\",\n                   \"font-size\": \"12px\"\n               }\n           },\n           \"images\": [\n               {\n                   \"id\": \"protagonist\",\n                   \"src\": \"order1_test1_listener1.png\",\n                   \"left\": \"40\",\n                   \"bottom\": \"2\",\n                   \"height\": \"60\"\n               },\n               {\n                   \"id\": \"speaker1\",\n                   \"text\": \"Click to hear what he said!\",\n                   \"src\": \"order1_test1_speaker1.png\",\n                   \"left\": \"20\",\n                   \"bottom\": \"2\",\n                   \"height\": \"60\",\n                   \"animate\": \"flyleft\",\n                   \"requireAudio\": true,\n                   \"imageAudio\": [\n                       {\n                           \"stub\": \"polcon_example_2_2speaker1polite\"\n                       }\n                   ]\n               }\n           ],\n           \"audioSources\": [\n               {\n                   \"audioId\": \"firstAudio\",\n                   \"sources\": [\n                       {\n                           \"stub\": \"polcon_example_2_1intro\"\n                       }\n                   ]\n               }\n           ]\n       },\n       \"phase-5\": {\n           \"kind\": \"exp-lookit-dialogue-page\",\n           \"id\": \"phase-5\",\n           \"baseDir\": \"https://s3.amazonaws.com/lookitcontents/politeness/\",\n           \"audioTypes\": [\"mp3\", \"ogg\"],\n           \"backgroundImage\": \"order1_test1_background.png\",\n           \"doRecording\": false,\n           \"autoProceed\": false,\n           \"isChoiceFrame\": true,\n           \"parentTextBlock\": {\n               \"title\": \"Parents:\",\n               \"text\": \"click on the character your child selects.\",\n               \"emph\": true\n           },\n           \"images\": [\n               {\n                   \"id\": \"speaker1\",\n                   \"src\": \"order1_test1_speaker1.png\",\n                   \"left\": \"20\",\n                   \"bottom\": \"2\",\n                   \"height\": \"60\"\n               },\n               {\n                   \"id\": \"speaker2\",\n                   \"src\": \"order1_test1_speaker2.png\",\n                   \"left\": \"60\",\n                   \"bottom\": \"2\",\n                   \"height\": \"60\"\n               }\n           ],\n           \"audioSources\": [\n               {\n                   \"audioId\": \"firstAudio\",\n                   \"sources\": [\n                       {\n                           \"stub\": \"polcon_example_5q1\"\n                       }\n                   ]\n               }\n           ]\n       }\n}\n\n```",
            "extends": "ExpFrameBase",
            "uses": [
                "FullScreen",
                "VideoRecord"
            ]
        },
        "ExpLookitExitSurvey": {
            "name": "ExpLookitExitSurvey",
            "shortname": "ExpLookitExitSurvey",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames",
            "namespace": "",
            "file": "addon/components/exp-lookit-exit-survey/component.js",
            "line": 31,
            "description": "Standard exit survey for Lookit studies: confirm participant birthdate, ask user for video sharing permission level & Databrary sharing, option to withdraw, freeform comments, debriefing/thank you text. Leaves fullscreen mode.\n\n```json\n\"frames\": {\n    \"my-exit-survey\": {\n        \"kind\": \"exp-lookit-exit-survey\",\n        \"debriefing\": {\n            \"title\": \"Thank you!\",\n            \"text\": \"Learning how children react to ducks will help scientists design better rubber ducks.\",\n            \"image\": {\n                \"src\": \"https://s3.amazonaws.com/lookitcontents/ducks/duck.png\",\n                \"alt\": \"Very cute duck\"\n            }\n        }\n    }\n}\n```",
            "extends": "ExpFrameBase",
            "uses": [
                "FullScreen",
                "Validations"
            ]
        },
        "ExpLookitGeometryAlternation": {
            "name": "ExpLookitGeometryAlternation",
            "shortname": "ExpLookitGeometryAlternation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames",
            "namespace": "",
            "file": "addon/components/exp-lookit-geometry-alternation/component.js",
            "line": 16,
            "description": "Deprecated: not yet adapted for use with webrtc recorder. Currently kept in codebase\nas an example of generating & drawing stimuli on the fly, but can be safely removed.\n\nFrame to implement specific test trial structure for geometry alternation\nexperiment. Includes announcement, calibration, and alternation (test)\nphases. During \"alternation,\" two streams of triangles are shown, in\nrectangles on the left and right of the screen: one one side both size and\nshape change, on the other only size changes. Frame is displayed fullscreen\nand video recording is conducted during calibration/test.\n\nThe geometry randomizer generates a series of ExpLookitGeometryAlternation\nframes.\n\nThis frame is displayed fullscreen; if the frame before it is not, that frame\nneeds to include a manual \"next\" button so that there's a user interaction\nevent to trigger fullscreen mode. (Browsers don't allow us to switch to FS\nwithout a user event.)\n\n\n```json\n\"frames\": {\n   \"alt-trial\": {\n       \"kind\": \"exp-lookit-geometry-alternation\",\n       \"triangleLineWidth\": 8,\n       \"calibrationVideoSources\": [\n           {\n               \"src\": \"https://s3.amazonaws.com/lookitcontents/geometry/webm/attention.webm\",\n               \"type\": \"video/webm\"\n           },\n           {\n               \"src\": \"https://s3.amazonaws.com/lookitcontents/geometry/mp4/attention.mp4\",\n               \"type\": \"video/mp4\"\n           }\n       ],\n       \"trialLength\": 60,\n       \"attnLength\": 10,\n       \"calibrationLength\": 3000,\n       \"fsAudio\": [\n           {\n               \"src\": \"https://s3.amazonaws.com/lookitcontents/geometry/mp3/fullscreen.mp3\",\n               \"type\": \"audio/mp3\"\n           },\n           {\n               \"src\": \"https://s3.amazonaws.com/lookitcontents/geometry/ogg/fullscreen.ogg\",\n               \"type\": \"audio/ogg\"\n           }\n       ],\n       \"triangleColor\": \"#056090\",\n       \"unpauseAudio\": [\n           {\n               \"src\": \"https://s3.amazonaws.com/lookitcontents/geometry/mp3/return_after_pause.mp3\",\n               \"type\": \"audio/mp3\"\n           },\n           {\n               \"src\": \"https://s3.amazonaws.com/lookitcontents/geometry/ogg/return_after_pause.ogg\",\n               \"type\": \"audio/ogg\"\n           }\n       ],\n       \"pauseAudio\": [\n           {\n               \"src\": \"https://s3.amazonaws.com/lookitcontents/geometry/mp3/pause.mp3\",\n               \"type\": \"audio/mp3\"\n           },\n           {\n               \"src\": \"https://s3.amazonaws.com/lookitcontents/geometry/ogg/pause.ogg\",\n               \"type\": \"audio/ogg\"\n           }\n       ],\n       \"videoSources\": [\n           {\n               \"src\": \"https://s3.amazonaws.com/lookitcontents/exp-physics-final/stimuli/attention/webm/attentiongrabber.webm\",\n               \"type\": \"video/webm\"\n           },\n           {\n               \"src\": \"https://s3.amazonaws.com/lookitcontents/exp-physics-final/stimuli/attention/mp4/attentiongrabber.mp4\",\n               \"type\": \"video/mp4\"\n           }\n       ],\n       \"musicSources\": [\n           {\n               \"src\": \"https://s3.amazonaws.com/lookitcontents/geometry/mp3/happy-stroll.mp3\",\n               \"type\": \"audio/mp3\"\n           },\n           {\n               \"src\": \"https://s3.amazonaws.com/lookitcontents/geometry/ogg/happy-stroll.ogg\",\n               \"type\": \"audio/ogg\"\n           }\n       ],\n       \"calibrationAudioSources\": [\n           {\n               \"src\": \"https://s3.amazonaws.com/lookitcontents/geometry/mp3/chimes.mp3\",\n               \"type\": \"audio/mp3\"\n           },\n           {\n               \"src\": \"https://s3.amazonaws.com/lookitcontents/geometry/ogg/chimes.ogg\",\n               \"type\": \"audio/ogg\"\n           }\n       ],\n       \"altOnLeft\": true,\n       \"context\": true,\n       \"audioSources\": [\n           {\n               \"type\": \"audio/mp3\",\n               \"src\": \"https://s3.amazonaws.com/lookitcontents/geometry/mp3/video_01.mp3\"\n           },\n           {\n               \"type\": \"audio/ogg\",\n               \"src\": \"https://s3.amazonaws.com/lookitcontents/geometry/ogg/video_01.ogg\"\n           }\n       ],\n       \"endAudioSources\": [\n           {\n               \"type\": 'audio/mp3',\n               \"src\": \"https://s3.amazonaws.com/lookitcontents/geometry/mp3/all_done.mp3\"\n           },\n           {\n               \"type\": \"audio/ogg\",\n               \"src\": \"https://s3.amazonaws.com/lookitcontents/geometry/ogg/all_done.ogg\"\n           }\n       ]\n   }\n}\n\n```",
            "extends": "ExpFrameBase",
            "uses": [
                "FullScreen",
                "VideoRecord"
            ]
        },
        "ExpLookitInstructions": {
            "name": "ExpLookitInstructions",
            "shortname": "ExpLookitInstructions",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames",
            "namespace": "",
            "file": "addon/components/exp-lookit-instructions/component.js",
            "line": 12,
            "description": "A frame to display instructions to the user. The user's webcam may optionally be\ndisplayed, and audio and video clips may be included in the instructions (and may be\nrequired to be played before moving on).\n\nEach element of the 'blocks' parameter is rendered using {{#crossLink \"ExpTextBlock\"}}{{/crossLink}}.\n\n```json\n\"frames\": {\n       \"instructions\": {\n           \"id\": \"instructions\",\n           \"kind\": \"exp-lookit-instructions\",\n           \"blocks\": [\n               {\n                   \"title\": \"Parent's role\",\n                   \"listblocks\": [\n                       {\n                           \"text\": \"Follow instructions\"\n                       },\n                       {\n                           \"text\": \"Only do each joke once\"\n                       }\n                   ]\n               },\n               {\n                   \"text\": \"It's important that we can see you\",\n                   \"image\": {\n                       \"alt\": \"Father holding child looking over his shoulder\",\n                       \"src\": \"https://s3.amazonaws.com/lookitcontents/exp-physics/OverShoulder.jpg\"\n                   },\n                   \"title\": \"Camera position\"\n               },\n               {\n                   \"text\": \"Here's some audio you have to play\",\n                   \"title\": \"Test\",\n                   \"mediaBlock\": {\n                       \"text\": \"You should hear 'Ready to go?'\",\n                       \"isVideo\": false,\n                       \"sources\": [\n                           {\n                               \"src\": \"https://s3.amazonaws.com/lookitcontents/exp-physics-final/audio/ready.mp3\",\n                               \"type\": \"audio/mp3\"\n                           },\n                           {\n                               \"src\": \"https://s3.amazonaws.com/lookitcontents/exp-physics-final/audio/ready.ogg\",\n                               \"type\": \"audio/ogg\"\n                           }\n                       ],\n                       \"mustPlay\": true,\n                       \"warningText\": \"Please try playing the sample audio.\"\n                   }\n               },\n               {\n                   \"text\": \"Here's a video you don't have to play!\",\n                   \"title\": \"Test\",\n                   \"mediaBlock\": {\n                       \"text\": \"Look at that.\",\n                       \"isVideo\": true,\n                       \"sources\": [\n                           {\n                               \"src\": \"https://s3.amazonaws.com/lookitcontents/exp-physics-final/examples/7_control_same.mp4\",\n                               \"type\": \"video/mp4\"\n                           },\n                           {\n                               \"src\": \"https://s3.amazonaws.com/lookitcontents/exp-physics-final/examples/7_control_same.webm\",\n                               \"type\": \"video/webm\"\n                           }\n                       ],\n                       \"mustPlay\": false\n                   }\n               }\n           ],\n           \"showWebcam\": true,\n           \"webcamBlocks\": [\n               {\n                   \"title\": \"Some webcam instructions\",\n                   \"listblocks\": [\n                       {\n                           \"text\": \"Like this!\"\n                       },\n                       {\n                           \"text\": \"Be careful your webcam does not have tape over it\"\n                       }\n                   ]\n               }\n           ],\n           \"nextButtonText\": \"Next\"\n       }\n}\n\n```",
            "extends": "VideoRecord"
        },
        "ExpLookitMoodQuestionnaire": {
            "name": "ExpLookitMoodQuestionnaire",
            "shortname": "ExpLookitMoodQuestionnaire",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames",
            "namespace": "",
            "file": "addon/components/exp-lookit-mood-questionnaire/component.js",
            "line": 16,
            "description": "A standard mood survey with questions about factors that might affect a\nchild's responses. Includes Likert-type ratings of the CHILD's position on\nthe following scales:\n- Tired - Rested\n- Sick - Healthy\n- Fussy - Happy\n- Calm - Active\n\nand of the PARENT's position on:\n- Tired - Energetic\n- Overwhelmed - On top of things\n- Upset - Happy\n\nIt also asks for a response in hours:minutes for:\n- how long ago the child last woke up from sleep or a nap\n- how long until he/she is due for another nap/sleep (if regular nap schedule)\n- how long ago the child last ate/drank\n\nand for what the child was doing just before this (free-response). Responses\nto all questions are required to move on.\n\nThis frame can be used as a starting point/example for other custom survey frames, or development of a customizable survey frame.\n\n```json\n\"frames\": {\n   \"mood-survey\": {\n       \"introText\": \"How are you two doing? We really want to know: we’re interested in how your child’s mood affects his or her looking preferences.\",\n       \"id\": \"mood-survey\",\n       \"kind\": \"exp-lookit-mood-questionnaire\"\n   }\n}\n\n```",
            "extends": "ExpFrameBase"
        },
        "ExpLookitObservation": {
            "name": "ExpLookitObservation",
            "shortname": "ExpLookitObservation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames",
            "namespace": "",
            "file": "addon/components/exp-lookit-observation/component.js",
            "line": 15,
            "description": "A frame to collect a video observation with the participant's help. By default the\nwebcam is displayed to the participant and they can choose when to start, pause, and\nresume recording. The duration of an individual recording can optionally be limited\nand/or recording can be started automatically. This is intended for cases where we\nwant the parent to perform some test or behavior with the child, rather than\npresenting stimuli ourselves. E.g., you might give instructions to conduct a structured\ninterview and allow the parent to control recording.\n\nEach element of the 'blocks' parameter is rendered using {{#crossLink \"ExpTextBlock\"}}{{/crossLink}}.\n\n```\n   \"frames\": {\n       \"observation\": {\n           \"kind\": \"exp-lookit-observation\",\n           \"blocks\": [\n               {\n                   \"title\": \"Time to do the joke!\",\n                   \"listblocks\": [\n                       {\n                           \"text\": \"Rip the paper\"\n                       },\n                       {\n                           \"text\": \"Wait ten seconds\"\n                       }\n                   ]\n               }\n           ],\n           \"hideWebcam\": true,\n           \"hideControls\": false,\n           \"recordSegmentLength\": 10,\n           \"startRecordingAutomatically\": false,\n           \"nextButtonText\": \"move on\",\n           \"showPreviousButton\": false\n       }\n   }\n```",
            "extends": "VideoRecord"
        },
        "ExpLookitVideo": {
            "name": "ExpLookitVideo",
            "shortname": "ExpLookitVideo",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames",
            "namespace": "",
            "file": "addon/components/exp-lookit-video/component.js",
            "line": 17,
            "description": "Basic video display for looking measures (e.g. preferential looking, looking time).\nTrial consists of four phases, each of which is optional.\n\n1. Announcement: The audio in audioSources is played while the attnSources video is played centrally, looping as needed. This lasts for announceLength seconds or the duration of the audio, whichever is longer. To skip this phase, set announceLength to 0 and do not provide audioSources.\n\n2. Intro: The introSources video is played centrally until it ends. To skip this phase, do not provide introSources.\n\n3. Calibration: The video in calibrationVideoSources is played (looping as needed) in each of the locations specified in calibrationPositions in turn, remaining in each position for calibrationLength ms. At the start of each position the audio in calibrationAudioSources is played once. (Audio will be paused and restarted if it is longer than calibrationLength.) Set calibrationLength to 0 to skip calibration.\n\n4. Test: The video in sources and audio in musicSources (optional) are played until either: testLength seconds have elapsed (with video looping if needed), or the video has been played testCount times. If testLength is set, it overrides testCount - for example if testCount is 1 and testLength is 30, a 10-second video will be played 3 times. If the participant pauses the study during the test phase, then after restarting the trial, the video in altSources will be used again (defaulting to the same video if altSources is not provided). To skip this phase, do not provide sources.\n\nSpecifying media locations:\nFor any parameters that expect a list of audio/video sources, you can EITHER provide\na list of src/type pairs with full paths like this:\n```json\n   [\n       {\n           'src': 'http://.../video1.mp4',\n           'type': 'video/mp4'\n       },\n       {\n           'src': 'http://.../video1.webm',\n           'type': 'video/webm'\n       }\n   ]\n```\nOR you can provide a list with a single object with a 'stub', which will be expanded\nbased on the parameter baseDir and the media types expected - either audioTypes or\nvideoTypes as appropriate. For example, if you provide the audio source\n```json\n   [\n       {\n           'stub': 'intro'\n       }\n   ]\n```\nand baseDir is https://mystimuli.org/mystudy/, with audioTypes ['mp3', 'ogg'], then this\nwill be expanded to:\n```json\n                [\n                       {\n                           src: 'https://mystimuli.org/mystudy/mp3/intro.mp3',\n                           type: 'audio/mp3'\n                       },\n                       {\n                           src: 'https://mystimuli.org/mystudy/ogg/intro.ogg',\n                           type: 'audio/ogg'\n                       }\n               ]\n```\nThis allows you to simplify your JSON document a bit and also easily switch to a\nnew version of your stimuli without changing every URL. You can mix source objects with\nfull URLs and those using stubs within the same directory. However, any stimuli\nspecified using stubs MUST be\norganized as expected under baseDir/MEDIATYPE/filename.MEDIATYPE.\n\nThis frame is displayed fullscreen; if the frame before it is not, that frame\nneeds to include a manual \"next\" button so that there's a user interaction\nevent to trigger fullscreen mode. (Browsers don't allow us to switch to FS\nwithout a user event.)\n\nExample usage:\n\n```json\n       \"sample-intermodal-trial-2\": {\n           \"id\": \"sample-intermodal-trial-2\",\n           \"kind\": \"exp-lookit-video\",\n           \"isLast\": false,\n           \"baseDir\": \"https://s3.amazonaws.com/lookitcontents/intermodal/\",\n           \"sources\": [\n               {\n                   \"stub\": \"sbs_ramp_down_up_apple_c1_b1_NN\"\n               }\n           ],\n           \"testCount\": 2,\n           \"altSources\": [\n               {\n                   \"stub\": \"sbs_ramp_up_down_apple_c1_b1_NN\"\n               }\n           ],\n           \"audioTypes\": [\n               \"ogg\",\n               \"mp3\"\n           ],\n           \"pauseAudio\": [\n               {\n                   \"stub\": \"pause\"\n               }\n           ],\n           \"videoTypes\": [\n               \"webm\",\n               \"mp4\"\n           ],\n           \"attnSources\": [\n               {\n                   \"stub\": \"attentiongrabber\"\n               }\n           ],\n           \"audioSources\": [\n               {\n                   \"stub\": \"video_02\"\n               }\n           ],\n           \"introSources\": [\n               {\n                   \"stub\": \"cropped_book\"\n               }\n           ],\n           \"musicSources\": [\n               {\n                   \"stub\": \"music_02\"\n               }\n           ],\n           \"unpauseAudio\": [\n               {\n                   \"stub\": \"return_after_pause\"\n               }\n           ],\n           \"calibrationLength\": 3000,\n           \"calibrationAudioSources\": [\n               {\n                   \"stub\": \"chimes\"\n               }\n           ],\n           \"calibrationVideoSources\": [\n               {\n                   \"stub\": \"attentiongrabber\"\n               }\n           ]\n       }\n\n```",
            "extends": "ExpFrameBase",
            "uses": [
                "FullScreen",
                "MediaReload",
                "VideoRecord"
            ]
        },
        "ExpLookitPreviewExplanation": {
            "name": "ExpLookitPreviewExplanation",
            "shortname": "ExpLookitPreviewExplanation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames",
            "namespace": "",
            "file": "addon/components/exp-lookit-preview-explanation/component.js",
            "line": 9,
            "description": "A frame that to explain any blinding procedures to parents, and offer them the option to preview stimuli before the study. Two buttons allow the user to move forward: one goes to the next frame (if the parent wants to preview stimuli), and one skips the next frame and goes to the one after that (if the parent declins). Therefore, this frame should be followed by an {{#crossLink \"ExpVideoPreview\"}}{{/crossLink}} frame.\n\n```json\n\"frames\": {\n   \"my-video-preview-explanation\": {\n       \"introBlock\": {\n           \"text\": \"During the videos, we'll ask that you hold your child over your shoulder like this, so that you're facing face away from the screen.\"\n       },\n       \"image\": {\n           \"alt\": \"Father holding child looking over his shoulder\",\n           \"src\": \"https://s3.amazonaws.com/lookitcontents/exp-physics/OverShoulder.jpg\"\n       },\n       \"kind\": \"exp-lookit-preview-explanation\",\n       \"skipButtonText\": \"Skip preview\",\n       \"previewButtonText\": \"I'd like to preview the videos\",\n       \"id\": \"video-preview-explanation\",\n       \"blocks\": [\n           {\n               \"text\": \"The reason we ask this is that your child is learning from you all the time. Even if he or she can't see where you're looking, you may unconsciously shift towards one side or the other and influence your child's attention. We want to make sure we're measuring your child's preferences, not yours!\"\n           },\n           {\n               \"text\": \"If you'd like to see the videos your child will be shown, you can take a look ahead of time now. It's important that you preview the videos without your child, so that the videos will still be new to them.\"\n           }\n       ],\n       \"showPreviousButton\": true\n   }\n}\n\n```",
            "extends": "ExpFrameBase"
        },
        "ExpLookitStoryPage": {
            "name": "ExpLookitStoryPage",
            "shortname": "ExpLookitStoryPage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames",
            "namespace": "",
            "file": "addon/components/exp-lookit-story-page/component.js",
            "line": 16,
            "description": "Frame to implement a basic \"storybook page\" trial, with images placed on the\nscreen within a display area and a sequence of audio files played.\nOptionally, images may be highlighted at specified times during the audio\nfiles.\n\nWebcam recording may be turned on or off; if on, the page is not displayed\nor audio started until recording begins.\n\nFrame is displayed fullscreen, but is not paused or otherwise disabled if the\nuser leaves fullscreen. A button appears prompting the user to return to\nfullscreen mode.\n\nThe parent may press 'next' to proceed, or the study may proceed\nautomatically when audio finishes (autoProceed).\n\nAny number of images may be placed on the screen, and their position\nspecified. (Aspect ratio will be the same as the original image.)\n\nThis frame is displayed fullscreen; if the frame before it is not, that frame\nneeds to include a manual \"next\" button so that there's a user interaction\nevent to trigger fullscreen mode. (Browsers don't allow us to switch to FS\nwithout a user event.)\n\n```json\n\"frames\": {\n   \"story-intro-1\": {\n           \"doRecording\": false,\n           \"autoProceed\": true,\n           \"baseDir\": \"https://s3.amazonaws.com/lookitcontents/ingroupobligations/\",\n           \"audioTypes\": [\"mp3\", \"ogg\"],\n           \"parentTextBlock\": {\n               \"title\": \"Parents!\",\n               \"text\": \"some instructions\",\n               \"emph\": true,\n               \"css\": {\n                   \"color\": \"red\",\n                   \"font-size\": \"12px\"\n               }\n           },\n           \"images\": [\n               {\n                   \"id\": \"leftA\",\n                   \"src\": \"flurps1.jpg\",\n                   \"left\": \"10\",\n                   \"width\": \"30\",\n                   \"top\": \"34.47\"\n               },\n               {\n                   \"id\": \"rightA\",\n                   \"src\": \"zazzes1.jpg\",\n                   \"left\": \"60\",\n                   \"width\": \"30\",\n                   \"top\": \"34.47\"\n               }\n           ],\n           \"kind\": \"exp-lookit-story-page\",\n           \"id\": \"story-intro-1\",\n           \"audioSources\": [\n               {\n                   \"audioId\": \"firstAudio\",\n                   \"sources\": [\n                       {\n                           \"stub\": \"intro1\"\n                       }\n                   ],\n                   \"highlights\": [\n                       {\"range\": [3.017343,\t5.600283], \"image\": \t\"leftA\"},\n                       {\"range\": [5.752911,\t8.899402], \"image\": \t\"rightA\"}\n                   ]\n               }\n           ]\n       }\n}\n\n```",
            "extends": "ExpFrameBase",
            "uses": [
                "FullScreen",
                "VideoRecord"
            ]
        },
        "ExpLookitSurvey": {
            "name": "ExpLookitSurvey",
            "shortname": "ExpLookitSurvey",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames",
            "namespace": "",
            "file": "addon/components/exp-lookit-survey/component.js",
            "line": 14,
            "description": "Basic survey frame allowing researcher to specify question text and types.\n\nThis frame uses ember-cli-dynamic-forms as a wrapper for alpacajs, a powerful\nlibrary for generating online forms. To specify the structure of your form\n(questions, answer types, validation), you provide a single 'formSchema' structure.\nThe 'formSchema' consists of a 'schema' object and an 'options' object, described\nunder Properties.\n\nYou can choose from any question types listed at http://www.alpacajs.org/documentation.html.\nIn that documentation, you will see that each field type - e.g., Checkbox, Radio, Text -\nhas some 'Schema' properties and some 'Options' properties. The properties under 'Schema'\nwill be defined in the 'schema' object of your formSchema. The properties under 'Options'\nwill be defined in the 'options' object of your formSchema.\n\nMany question types allow you to easily validate answers. For instance, for a \"number\"\nfield you can set minimum and maximum values, and entries will automatically be\nrequired to be numeric (http://www.alpacajs.org/docs/fields/number.html). You can also\neither set required: true in the schema->properties entry for this field OR set\nvalidator: required-field in the options->fields entry if you want to require that the\nparticipant enters something. A validation error message will be displayed next to\nany fields that fail validation checks and the participant will not be able to proceed until\nthese are addressed.\n\nAlpacajs is fairly powerful, and you are essentially using it directly. In general, you can copy\nand paste any object passed to alpaca in the alpaca docs right in as your formSchema to\nsee that example in action on Lookit. Not all features of alpaca are detailed here,\nbut they can be used: e.g., advanced users can enter 'views' and 'data' in the\nformSchema to customize the layout of their forms and the initial data. A 'dataSource'\nmay be specified under options to populate a question's potential answers (e.g., to\nload a list of countries from some other source rather than hard-coding it, or to\nprovide checkboxes with vocabulary items from an externally-defined inventory).\n\nYou can also use alpacajs's \"dependencies\" and \"conditional dependencies\" functionality to\nset up fields that depend on other fields - e.g., asking if the child speaks any\nlanguage besides English in the home and only if so displaying a dropdown to select the\nlanguage(s), or asking if the child likes Elmo or Grover better and then asking a question\nspecific to the preferred character. Or if you have questions only relevant to the\nbirth mother of the child, you could ask if the participant is the birth mother and show\nthose questions conditionally.\n\nNote that question titles are interpreted as HTML and can include images, audio/video\nelements, and inline CSS.\n\nIf a participant returns to this frame after continuing, via a 'Previous' button on the\nnext frame, then the values in this form are pre-filled.\n\nNo video recording is conducted on this frame.\n\nA previous button may optionally be included on this frame.\n\nThe form itself occupies a maximum of 800px horizontally and takes up 80% of the vertical\nheight of the window (it will scroll to fit).\n\nCurrent limitations: you are NOT\nable to provide custom functions (e.g. validators, custom dataSource functions)\ndirectly to the formSchema.\n\n\n```json\n\"frames\": {\n       \"pet-survey\": {\n           \"id\": \"pet-survey\",\n           \"kind\": \"exp-lookit-survey\",\n           \"formSchema\": {\n               \"schema\": {\n                   \"type\": \"object\",\n                   \"title\": \"Tell us about your pet!\",\n                   \"properties\": {\n                       \"age\": {\n                           \"type\": \"integer\",\n                           \"title\": \"Age\",\n                           \"maximum\": 200,\n                           \"minimum\": 0,\n                           \"required\": true\n                       },\n                       \"name\": {\n                           \"type\": \"string\",\n                           \"title\": \"Name\",\n                           \"required\": true\n                       },\n                       \"species\": {\n                           \"enum\": [\n                               \"dog\",\n                               \"cat\",\n                               \"fish\",\n                               \"bird\",\n                               \"raccoon\"\n                           ],\n                           \"type\": \"string\",\n                           \"title\": \"What type of animal?\",\n                           \"default\": \"\"\n                       }\n                   }\n               },\n               \"options\": {\n                   \"fields\": {\n                       \"age\": {\n                           \"numericEntry\": true\n                       },\n                       \"name\": {\n                           \"placeholder\": \"a name...\"\n                       },\n                       \"species\": {\n                           \"type\": \"radio\",\n                           \"message\": \"Seriously, what species??\",\n                           \"validator\": \"required-field\"\n                       }\n                   }\n               }\n           },\n           \"nextButtonText\": \"Moving on...\"\n       }\n   }\n\n```",
            "extends": "ExpFrameBase"
        },
        "ExpLookitText": {
            "name": "ExpLookitText",
            "shortname": "ExpLookitText",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames",
            "namespace": "",
            "file": "addon/components/exp-lookit-text/component.js",
            "line": 9,
            "description": "A frame to display text-only instructions, etc. to the user.\n\n```json\n\"frames\": {\n   \"study-intro\": {\n       \"id\": \"geom-intro\",\n       \"blocks\": [\n           {\n               \"emph\": true,\n               \"text\": \"Important: your child does not need to be with you until the videos begin. First, let's go over what will happen!\",\n               \"title\": \"Your baby, the physicist\"\n           },\n           {\n               \"text\": \"Some introductory text about this study.\"\n           },\n           {\n               \"text\": \"Another paragraph about this study.\"\n           }\n       ],\n       \"showPreviousButton\": false,\n       \"kind\": \"exp-lookit-text\"\n   }\n}\n\n```",
            "extends": "ExpFrameBase"
        },
        "ExpLookitVideoConsent": {
            "name": "ExpLookitVideoConsent",
            "shortname": "ExpLookitVideoConsent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames",
            "namespace": "",
            "file": "addon/components/exp-lookit-video-consent/component.js",
            "line": 16,
            "description": "Video consent frame for Lookit studies, with consent document displayed at left and instructions to start recording, read a statement out loud, and send. A standard consent\ndocument is displayed, with additional study-specific information provided by the researcher, in accordance with the Lookit terms of use. Consent document can be downloaded as PDF document by participant.\n\n```json\n\"frames\": {\n    \"video-consent\": {\n        \"id\": \"video-consent\",\n        \"kind\": \"exp-lookit-video-consent\",\n        \"PIName\": \"Jane Smith\",\n        \"institution\": \"Science University\",\n        \"PIContact\": \"Jane Smith at 123 456 7890\",\n        \"purpose\": \"Why do babies love cats? This study will help us find out whether babies love cats because of their soft fur or their twitchy tails.\",\n        \"procedures\": \"Your child will be shown pictures of lots of different cats, along with noises that cats make like meowing and purring. We are interested in which pictures and sounds make your child smile. We will ask you (the parent) to turn around to avoid influencing your child's responses. There are no anticipated risks associated with participating.\",\n        \"payment\": \"After you finish the study, we will email you a $5 BabyStore gift card within approximately three days. To be eligible for the gift card your child must be in the age range for this study, you need to submit a valid consent statement, and we need to see that there is a child with you. But we will send a gift card even if you do not finish the whole study or we are not able to use your child's data! There are no other direct benefits to you or your child from participating, but we hope you will enjoy the experience.\",\n        \"datause\": \"We are primarily interested in your child's emotional reactions to the images and sounds. A research assistant will watch your video to measure the precise amount of delight in your child's face as he or she sees each cat picture.\"\n    }\n}\n```",
            "extends": "ExpFrameBase",
            "uses": [
                "VideoRecord"
            ]
        },
        "ExpPlayer": {
            "name": "ExpPlayer",
            "shortname": "ExpPlayer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "components",
            "namespace": "",
            "file": "addon/components/exp-player/component.js",
            "line": 16,
            "description": "Experiment player: a component that renders a series of frames that define an experiment\n\nSample usage:\n```handlebars\n{{exp-player\n  experiment=experiment\n  session=session\n  pastSessions=pastSessions\n  saveHandler=(action 'saveSession')\n  frameIndex=0\n  fullScreenElementId='expContainer'}}\n```"
        },
        "ExpVideoConfig": {
            "name": "ExpVideoConfig",
            "shortname": "ExpVideoConfig",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames",
            "namespace": "",
            "file": "addon/components/exp-video-config/component.js",
            "line": 12,
            "description": "Video configuration frame guiding user through making sure permissions are set appropriately and microphone is working, with troubleshooting text. All content is hard-coded for a general-purpose technical setup frame.\n\n```json\n\"frames\": {\n    \"video-config\": {\n        \"id\": \"video-config\",\n        \"kind\": \"exp-video-config\"\n    }\n}\n```",
            "extends": "VideoRecord"
        },
        "ExpVideoConfigQuality": {
            "name": "ExpVideoConfigQuality",
            "shortname": "ExpVideoConfigQuality",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames",
            "namespace": "",
            "file": "addon/components/exp-video-config-quality/component.js",
            "line": 11,
            "description": "Video configuration frame showing webcam view at right and instructions for checking video quality for preferential looking setup at left, with pictures. Content is hard-coded for preferential looking requirements and images; this frame can serve as a template for other applications (e.g., verbal responses, where we might care less about lighting but want to generally be able to see the child's face) or can be generalized to show an arbitrary set of instructions/images.\n\n```json\n\"frames\": {\n    \"video-quality\": {\n        \"id\": \"video-quality\",\n        \"kind\": \"exp-video-config-quality\"\n    }\n}\n```",
            "extends": "VideoRecord"
        },
        "ExpVideoConsent": {
            "name": "ExpVideoConsent",
            "shortname": "ExpVideoConsent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames",
            "namespace": "",
            "file": "addon/components/exp-video-consent/component.js",
            "line": 11,
            "description": "Video consent frame for Lookit studies UNDER INITIAL MIT PROTOCOL ONLY, with consent document displayed at left and instructions to start recording, read a statement out loud, and send.\nThis version allows custom specification of consent form text.\nFor studies by researchers who have signed the Lookit Usage Agreement and have approval from their own IRB, please use exp-lookit-video-consent frame.\nConsent document can be downloaded as PDF document by participant.\n\n```json\n\"frames\": {\n    \"video-consent\": {\n        \"blocks\": [\n            {\n                 \"text\": \"Observing your child's behavior during this experimental session will help us to understand how infants and children use evidence to learn and make predictions about the world.\",\n                \"title\": \"About the study\"\n            },\n            {\n                \"text\": \"Your and your child's participation in this session are completely voluntary. If you and your child choose to participate, you may stop the session at any point with no penalty. Please pause or stop the session if your child becomes very fussy or does not want to participate. If this is a study with multiple sessions, there are no penalties for not completing all sessions.\",\n                \"title\": \"Participation\"\n            },\n            {\n                \"text\": \"During the session, you and your child will be recorded via your computer's webcam and microphone while watching a video or completing an activity. Video recordings and other data you enter are sent securely to our lab. At the end of the session, or when you end it early, you will be prompted to choose a privacy level for your webcam recordings. \",\n                \"title\": \"Webcam recording\"\n            },\n            {\n                \"text\": \"Recordings and survey responses will be stored on a password-protected server and accessed only by the Lookit researchers working on this study and any other groups you allow when selecting a privacy level. A researcher may transcribe responses or record information such as where you or your child is looking. Data will not be used to identify you or your child. The results of the research may be presented at scientific meetings or published in scientific journals, but no video clips will be shared unless you allow this when selecting a privacy level.\\n\\nRaw data may also be published when it can not identify children; for instance, we may publish children’s looking times to the left versus right of the screen, or parent comments with children’s names removed. We may also study your child’s responses in connection with his or her previous responses to this or other studies, siblings’ responses, or demographic survey responses. We never publish children’s birthdates or names, and we never publish your demographic data in conjunction with your child’s video.\",\n                \"title\": \"Use of data\"\n            },\n            {\n                \"text\": \"If you or your child have any questions or concerns about this research, you may contact Professor Laura Schulz: {contact}\",\n                \"title\": \"Contact information\"\n            }\n        ],\n        \"id\": \"video-consent\",\n        \"prompt\": \"\\\"I have read and understand the consent document. I am this child's parent or legal guardian and we both agree to participate in this study.\\\"\",\n        \"kind\": \"exp-video-consent\"\n    }\n}\n```",
            "extends": "ExpLookitVideoConsent",
            "uses": [
                "VideoRecord"
            ]
        },
        "ExpVideoPreview": {
            "name": "ExpVideoPreview",
            "shortname": "ExpVideoPreview",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "frames",
            "namespace": "",
            "file": "addon/components/exp-video-preview/component.js",
            "line": 13,
            "description": "A frame that displays a series of videos to preview, without collecting data as a live experiment. User can go through these at their own pace and video controls are shown. Webcam video is recorded starting once the user presses a button to actually display the videos, so that researchers can check that the participant (infant/child) did not see the videos ahead of time.\n```json\n\"frames\": {\n   \"my-sample-frame\": {\n       \"id\": \"video-preview\",\n       \"kind\": \"exp-video-preview\",\n       \"text\": \"Here are the videos your child will see in this study. You can watch them ahead of time--please just don't show your child yet!\",\n       \"prompt\": \"My child can NOT see the screen. Start the preview!\",\n       \"videos\": [\n          {\n            \"caption\": \"User-facing text that appears below the video\",\n            \"sources\": [\n              {\n                \"type\": \"video/webm\",\n                \"src\": \"https://url.com/example_intro.webm\"\n              },\n              {\n                \"type\": \"video/mp4\",\n                \"src\": \"https://url.com/example_intro.webm\"\n              }\n            ]\n          }\n        ]\n   }\n\n```",
            "extends": "ExpFrameBase"
        },
        "FullScreen": {
            "name": "FullScreen",
            "shortname": "FullScreen",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "ExpExitSurvey",
                "ExpFrameBase",
                "ExpLookitDialoguePage",
                "ExpLookitExitSurvey",
                "ExpLookitGeometryAlternation",
                "ExpLookitVideo",
                "ExpLookitStoryPage"
            ],
            "module": "exp-player",
            "submodule": "mixins",
            "namespace": "",
            "file": "addon/mixins/full-screen.js",
            "line": 12,
            "description": "Allow components to specify fullscreen capabilities based on minimal configuration options"
        },
        "MediaReload": {
            "name": "MediaReload",
            "shortname": "MediaReload",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "ExpLookitVideo"
            ],
            "module": "exp-player",
            "submodule": "mixins",
            "namespace": "",
            "file": "addon/mixins/media-reload.js",
            "line": 8,
            "description": "Allow any media-containing frame to correctly reset.\nFix LEI-93, an issue where the second of two consecutive videos did not play correctly.\n\nDue to an internal ember quirk/optimization, the component instance is not destroyed if two of the same thing are\n used in a row, which means the same video tag was being dynamically reassigned- something HTML does not normally\nallow. The page needs to be manually told to load the correct new video.\n\nSee commentary here: http://stackoverflow.com/a/18454389/1422268"
        },
        "VideoRecordMixin": {
            "name": "VideoRecordMixin",
            "shortname": "VideoRecordMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "mixins",
            "namespace": "",
            "file": "addon/mixins/video-record.js",
            "line": 12,
            "description": "A mixin that can be used to add basic support for video recording to a particular experiment frame\n\nBy default, the recorder will be installed when this frame loads, but recording\nwill not start automatically. To override either of these settings, set\nthe properties `doUseCamera` and/or `startRecordingAutomatically` in the consuming\nframe.\n\nYou will also need to set `recorderElement` if the recorder is to be housed other than\nin an element identified by the ID `recorder`.\n\nThe properties `recorder`, `videoList`, `stoppedRecording`, `recorderReady`, and\n`videoId` become available to the consuming frame. The recorder object has fields\nthat give information about its state: `hasWebCam`, 'hasCamAccess`, `recording`,\n`connected`, and `micChecked` - for details, see services/video-recorder.js. These\ncan be accessed from the consuming frame as e.g. `this.get('recorder').get('hasWebCam')`.\n\nIf starting recording automatically, the function `whenPossibleToRecord` will be called\nonce recording is possible, and will start recording. If you want to do other things\nat this point, like proceeding to a test trial, you can override this function in your\nframe.\n\nSee 'methods' for the functions you can use on a frame that extends VideoRecord.\n\nEvents recorded in a frame that extends VideoRecord will automatically have additional\nfields videoId (video filename), pipeId (temporary filename initially assigned by\nthe recording service),\nand streamTime (when in the video they happened, in s).\n\nSetting up the camera is handled in didInsertElement, and making sure recording is\nstopped is handled in willDestroyElement (Ember hooks that fire during the component\nlifecycle). It is very important (in general, but especially when using this mixin)\nthat you call `this._super(...arguments);` in any functions where your frame overrides\nhooks like this, so that the mixin's functions get called too!"
        },
        "permute": {
            "name": "permute",
            "shortname": "permute",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "randomizers",
            "namespace": "",
            "file": "addon/randomizers/permute.js",
            "line": 6,
            "description": "Randomizer to allow random ordering of a list of frames. Intended to be\nuseful for e.g. randomly permuting the order of particular stimuli used during\na set of trials (although frames need not be of the same kind to permute).\n\nTo use, define a frame with \"kind\": \"choice\" and \"sampler\": \"permute\",\nas shown below, in addition to the parameters described under 'properties'.\n\n```json\n\"frames\": {\n   \"test-trials\": {\n       \"sampler\": \"permute\",\n       \"kind\": \"choice\",\n       \"id\": \"test-trials\",\n       \"commonFrameProperties\": {\n           \"showPreviousButton\": false\n       },\n       \"frameOptions\": [\n           {\n               \"blocks\": [\n                   {\n                       \"emph\": true,\n                       \"text\": \"Let's think about hippos!\",\n                       \"title\": \"hippos!\"\n                   },\n                   {\n                       \"text\": \"Some more about hippos...\"\n                   }\n               ],\n               \"kind\": \"exp-lookit-text\"\n           },\n           {\n               \"blocks\": [\n                   {\n                       \"emph\": false,\n                       \"text\": \"Let's think about dolphins!\",\n                       \"title\": \"dolphins!\"\n                   }\n               ],\n               \"kind\": \"exp-lookit-text\"\n           }\n       ]\n   }\n}\n\n```"
        },
        "randomParameterSet": {
            "name": "randomParameterSet",
            "shortname": "randomParameterSet",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "randomizers",
            "namespace": "",
            "file": "addon/randomizers/random-parameter-set.js",
            "line": 8,
            "description": "Randomizer to implement flexible condition assignment and counterbalancing by\nallowing the user to specify an arbitrary sequence of frames to create. A\nset of parameters is randomly selected from a list of available parameterSets,\nand these parameters are substituted in to the parameters specified in the\nlist of frames.\n\nTo use, define a frame with \"kind\": \"choice\" and \"sampler\": \"random-parameter-set\",\nas shown below, in addition to the parameters described under 'properties'.\n\nThis\n\n```json\n\"frames\": {\n   \"test-trials\": {\n       \"sampler\": \"random-parameter-set\",\n       \"kind\": \"choice\",\n       \"id\": \"test-trials\",\n       \"commonFrameProperties\": {\n           \"kind\": \"exp-lookit-story-page\",\n           \"baseDir\": \"https://s3.amazonaws.com/lookitcontents/ingroupobligations/\",\n           \"audioTypes\": [\"mp3\", \"ogg\"],\n           \"doRecording\": true,\n           \"autoProceed\": false,\n           \"parentTextBlock\": {\n               \"title\": \"Parents!\",\n               \"text\": \"Common instructions across test trials here\",\n               \"emph\": true\n           }\n       },\n       \"frameList\": [\n           {\n               \"images\": [\n                   {\n                       \"id\": \"agent\",\n                       \"src\": \"AGENTIMG1\",\n                       \"left\": \"40\",\n                       \"width\": \"20\",\n                       \"top\": \"10\"\n                   },\n                   {\n                       \"id\": \"left\",\n                       \"src\": \"LEFTIMG1\",\n                       \"left\": \"10\",\n                       \"width\": \"20\",\n                       \"top\": \"50\"\n                   },\n                   {\n                       \"id\": \"right\",\n                       \"src\": \"RIGHTIMG1\",\n                       \"left\": \"70\",\n                       \"width\": \"20\",\n                       \"top\": \"50\"\n                   }\n               ],\n               \"audioSources\": [\n                   {\n                       \"audioId\": \"questionaudio\",\n                       \"sources\": [{\"stub\": \"QUESTION1AUDIO\"}],\n                       \"highlights\": \"QUESTION1HIGHLIGHTS\"\n                   }\n               ]\n           },\n           {\n               \"images\": [\n                   {\n                       \"id\": \"agent\",\n                       \"src\": \"AGENTIMG2\",\n                       \"left\": \"40\",\n                       \"width\": \"20\",\n                       \"top\": \"10\"\n                   },\n                   {\n                       \"id\": \"left\",\n                       \"src\": \"LEFTIMG2\",\n                       \"left\": \"10\",\n                       \"width\": \"20\",\n                       \"top\": \"50\"\n                   },\n                   {\n                       \"id\": \"right\",\n                       \"src\": \"RIGHTIMG2\",\n                       \"left\": \"70\",\n                       \"width\": \"20\",\n                       \"top\": \"50\"\n                   }\n               ],\n               \"audioSources\": [\n                   {\n                       \"audioId\": \"questionaudio\",\n                       \"sources\": [{\"stub\": \"QUESTION2AUDIO\"}],\n                       \"highlights\": \"QUESTION2HIGHLIGHTS\"\n                   }\n               ]\n           }\n       ],\n       \"parameterSets\": [\n           {\n               \"AGENTIMG1\": \"flurpagent1.jpg\",\n               \"LEFTIMG1\": \"flurpvictim1.jpg\",\n               \"RIGHTIMG1\": \"zazzvictim1.jpg\",\n               \"QUESTION1AUDIO\": \"flurpleftmean1\",\n               \"QUESTION1HIGHLIGHTS\": [\n                   {\"range\": [0.399293,\t3.617124], \"image\": \"agent\"},\n                   {\"range\": [5.085112,\t6.811467], \"image\": \"left\"},\n                   {\"range\": [6.905418,\t8.702236], \"image\": \"right\"}\n               ],\n               \"AGENTIMG2\": \"flurpagent2.jpg\",\n               \"LEFTIMG2\": \"flurpvictim2.jpg\",\n               \"RIGHTIMG2\": \"zazzvictim2.jpg\",\n               \"QUESTION2AUDIO\": \"flurpleftinduct1\",\n               \"QUESTION2HIGHLIGHTS\": [\n                   {\"range\": [0.372569,\t5.309110], \"image\": \"agent\"},\n                   {\"range\": [5.495395,\t7.209213], \"image\": \"left\"},\n                   {\"range\": [5.495395,\t7.209213], \"image\": \"right\"},\n                   {\"range\": [9.966225,\t11.922212], \"image\": \"left\"},\n                   {\"range\": [12.052612,\t14.008600], \"image\": \"right\"}\n               ]\n           },\n           {\n               \"AGENTIMG1\": \"zazzagent1.jpg\",\n               \"LEFTIMG1\": \"flurpvictim1.jpg\",\n               \"RIGHTIMG1\": \"zazzvictim1.jpg\",\n               \"QUESTION1AUDIO\": \"zazzrightnice1\",\n               \"QUESTION1HIGHLIGHTS\": [\n                   {\"range\": [0.348454,\t3.736871], \"image\": \"agent\"},\n                   {\"range\": [5.395033,\t6.884975], \"image\": \"left\"},\n                   {\"range\": [6.969085,\t8.975701], \"image\": \"right\"}\n               ],\n               \"AGENTIMG2\": \"zazzagent2.jpg\",\n               \"LEFTIMG2\": \"flurpvictim2.jpg\",\n               \"RIGHTIMG2\": \"zazzvictim2.jpg\",\n               \"QUESTION2AUDIO\": \"zazzrightinduct1\",\n               \"QUESTION2HIGHLIGHTS\": [\n                   {\"range\": [0.572920,\t5.138376], \"image\": \"agent\"},\n                   {\"range\": [5.335317,\t7.089884], \"image\": \"left\"},\n                   {\"range\": [5.335317,\t7.089884], \"image\": \"right\"},\n                   {\"range\": [9.721735,\t11.565821], \"image\": \"left\"},\n                   {\"range\": [11.655340,\t13.535233], \"image\": \"right\"}\n               ]\n           }\n       ],\n       \"parameterSetWeights\": [1, 1]\n   }\n}\n\n```"
        },
        "VideoRecorderObject": {
            "name": "VideoRecorderObject",
            "shortname": "VideoRecorderObject",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "services",
            "namespace": "",
            "file": "addon/services/video-recorder.js",
            "line": 47,
            "description": "An instance of a video recorder tied to or used by one specific page. A given experiment may use more than one\n  video recorder depending on the number of video capture frames."
        },
        "videoRecorder": {
            "name": "videoRecorder",
            "shortname": "videoRecorder",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "exp-player",
            "submodule": "services",
            "namespace": "",
            "file": "addon/services/video-recorder.js",
            "line": 321,
            "description": "A service designed to facilitate video recording by providing helper methods and managing multiple recorder objects\n Using a persistent service is intended to ensure we destroy recorder elements when the video is done uploading,\n rather than just when the user exits the frame"
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "addon/components/exp-frame-base/component.js",
            "line": 173,
            "description": "The base class does not define any data to save to the server. It does, however, capture some basic event\n  timing data. (such as when the user clicks the \"next\" button)\n\nThis section slightly breaks YUIDoc conventions- rather than being a literal guide to using the code, the\n  \"parameters\" here are abstract descriptions of what data is captured.\n\nEach frame that extends ExpFrameBase will send an array `eventTimings`\nback to the server upon completion. This array is an ordered list (oldest\nto newest) of every EVENT that happened during the frame. Each event is\nrepresented as an object with at least the properties\n`{'eventType': EVENTNAME, 'timestamp': TIMESTAMP}`. Frame-specific events\nmay define additional properties that are sent.",
            "params": [
                {
                    "name": "eventTimings",
                    "description": "",
                    "type": "Array"
                }
            ],
            "itemtype": "method",
            "name": "serializeContent",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "ExpFrameBase",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-frame-base/component.js",
            "line": 198,
            "description": "Create the time event payload for a particular frame / event. This can be overridden to add fields to every\n event sent by a particular frame",
            "itemtype": "method",
            "name": "makeTimeEvent",
            "params": [
                {
                    "name": "eventName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "extra",
                    "description": "An object with additional properties to be sent to the server",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "Event type, time, and any additional metadata provided",
                "type": "Object"
            },
            "class": "ExpFrameBase",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-frame-base/component.js",
            "line": 232,
            "description": "Move to next frame",
            "itemtype": "event",
            "name": "nextFrame",
            "class": "ExpFrameBase",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-frame-base/component.js",
            "line": 255,
            "description": "Move to previous frame",
            "itemtype": "event",
            "name": "previousFrame",
            "class": "ExpFrameBase",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-dialogue-page/component.js",
            "line": 213,
            "description": "Phase number (just included as a convenience & sent to server, to make handling collected data simpler)",
            "itemtype": "property",
            "name": "nPhase",
            "type": "Number",
            "default": "0",
            "class": "ExpLookitDialoguePage",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-dialogue-page/component.js",
            "line": 224,
            "description": "Trial number (just included as a convenience & sent to server, to make handling collected data simpler)",
            "itemtype": "property",
            "name": "nTrial",
            "type": "Number",
            "default": "0",
            "class": "ExpLookitDialoguePage",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-dialogue-page/component.js",
            "line": 235,
            "description": "URL of background image; will be stretched to width of page",
            "itemtype": "property",
            "name": "backgroundImage",
            "type": "String",
            "class": "ExpLookitDialoguePage",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-dialogue-page/component.js",
            "line": 244,
            "description": "Whether this is a frame where the user needs to click to\nselect one of the images before proceeding",
            "itemtype": "property",
            "name": "isChoiceFrame",
            "type": "Boolean",
            "default": "false",
            "class": "ExpLookitDialoguePage",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-dialogue-page/component.js",
            "line": 255,
            "description": "Base directory for where to find stimuli. Any image src\nvalues that are not full paths will be expanded by prefixing\nwith `baseDir` + `img/`. Any audio/video src values that give\na value for 'stub' rather than 'src' and 'type' will be\nexpanded out to\n`baseDir/avtype/[stub].avtype`, where the potential avtypes\nare given by audioTypes and videoTypes.\n\nNote that baseDir SHOULD include a trailing slash\n(e.g., `http://stimuli.org/myexperiment/`, not\n`http://stimuli.org/myexperiment`)",
            "itemtype": "property",
            "name": "baseDir",
            "type": "String",
            "default": "''",
            "class": "ExpLookitDialoguePage",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-dialogue-page/component.js",
            "line": 276,
            "description": "List of audio types to expect for any audio specified just\nwith a string rather than with a list of src/type pairs.\nIf audioTypes is ['typeA', 'typeB'] and an audio source\nis given as [{'stub': 'intro'}], the audio source will be\nexpanded out to\n\n```json\n                [\n                       {\n                           src: 'baseDir' + 'typeA/intro.typeA',\n                           type: 'audio/typeA'\n                       },\n                       {\n                           src: 'baseDir' + 'typeB/intro.typeB',\n                           type: 'audio/typeB'\n                       }\n               ]\n```",
            "itemtype": "property",
            "name": "audioTypes",
            "type": "String[]",
            "default": "['mp3', 'ogg']",
            "class": "ExpLookitDialoguePage",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-dialogue-page/component.js",
            "line": 304,
            "description": "Whether to do webcam recording (will wait for webcam\nconnection before starting audio if so)",
            "itemtype": "property",
            "name": "doRecording",
            "type": "Boolean",
            "class": "ExpLookitDialoguePage",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-dialogue-page/component.js",
            "line": 314,
            "description": "Whether to proceed automatically after audio (and hide\nreplay/next buttons)",
            "itemtype": "property",
            "name": "autoProceed",
            "type": "Boolean",
            "class": "ExpLookitDialoguePage",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-dialogue-page/component.js",
            "line": 324,
            "description": "Array of objects describing audio to play at the start of\nthis frame. Each element describes a separate audio segment.",
            "itemtype": "property",
            "name": "audioSources",
            "type": "Object[]",
            "class": "ExpLookitDialoguePage",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "audioId",
                    "description": "unique string identifying this\n     audio segment",
                    "type": "String"
                },
                {
                    "name": "sources",
                    "description": "Array of {src: 'url', type:\n     'MIMEtype'} objects with audio sources for this segment.\n\nCan also give a single element {stub: 'filename'}, which will\nbe expanded out to the appropriate array based on `baseDir`\nand `audioTypes` values; see `audioTypes`.",
                    "type": "Object[]"
                },
                {
                    "name": "highlights",
                    "description": "Array of {'range': [startT,\n     endT], 'image': 'imageId'} objects, where the imageId\n     values correspond to the ids given in images",
                    "type": "Object[]"
                }
            ]
        },
        {
            "file": "addon/components/exp-lookit-dialogue-page/component.js",
            "line": 389,
            "description": "Text block to display to parent. (Each field is optional)",
            "itemtype": "property",
            "name": "parentTextBlock",
            "type": "Object",
            "class": "ExpLookitDialoguePage",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "title",
                    "description": "title to display",
                    "type": "String"
                },
                {
                    "name": "text",
                    "description": "paragraph of text",
                    "type": "String"
                },
                {
                    "name": "emph",
                    "description": "whether to bold this paragraph",
                    "type": "Boolean"
                },
                {
                    "name": "css",
                    "description": "object specifying any css properties\n     to apply to this section, and their values - e.g.\n     {'color': 'red', 'font-size': '12px'}.",
                    "type": "Object"
                }
            ]
        },
        {
            "file": "addon/components/exp-lookit-dialogue-page/component.js",
            "line": 419,
            "description": "Array of images to display and information about their placement",
            "itemtype": "property",
            "name": "images",
            "type": "Object[]",
            "class": "ExpLookitDialoguePage",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "id",
                    "description": "unique ID for this image. This will be used to refer to the choice made by the user, if any.",
                    "type": "String"
                },
                {
                    "name": "src",
                    "description": "URL of image source (can be full URL, or stub to append to baseDir; see `baseDir`)",
                    "type": "String"
                },
                {
                    "name": "left",
                    "description": "distance from left of story area to image center, as percentage of story area width",
                    "type": "String"
                },
                {
                    "name": "height",
                    "description": "image height, as percentage of story area height",
                    "type": "String"
                },
                {
                    "name": "bottom",
                    "description": "bottom margin, as percentage of story area height",
                    "type": "String"
                },
                {
                    "name": "animate",
                    "description": "animation to use at start of trial on this image, if any. If not provided, image is shown throughout trial. Options are 'fadein', 'fadeout', 'flyleft' (fly from left), and 'flyright'.",
                    "type": "String"
                },
                {
                    "name": "text",
                    "description": "text to display above image, e.g. 'Click to hear what he said!' If omitted, no text is shown.",
                    "type": "String"
                },
                {
                    "name": "imageAudio",
                    "description": "sources Array of {src: 'url',\ntype: 'MIMEtype'} objects with audio sources for audio to play when this image is clicked, if any. (Omit to not associate audio with this image.)\n\nCan also give a single element {stub: 'filename'}, which will\nbe expanded out to the appropriate array based on `baseDir`\nand `audioTypes` values; see `audioTypes`.",
                    "type": "Object[]"
                },
                {
                    "name": "requireAudio",
                    "description": "whether to require the user to click this image and complete the audio associated before proceeding to the next trial. (Incompatible with autoProceed.)",
                    "type": "Boolean"
                }
            ]
        },
        {
            "file": "addon/components/exp-lookit-dialogue-page/component.js",
            "line": 491,
            "description": "Parameters captured and sent to the server",
            "itemtype": "method",
            "name": "serializeContent",
            "params": [
                {
                    "name": "videoID",
                    "description": "The ID of any video recorded during this frame",
                    "type": "String"
                },
                {
                    "name": "videoList",
                    "description": "a list of webcam video IDs in case there are >1",
                    "type": "List"
                },
                {
                    "name": "eventTimings",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "currentlyHighlighted",
                    "description": "which image is selected at\n  the end of the trial, or null if none is. This indicates the\n  final selected choice for a choice trial.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The payload sent to the server",
                "type": "Object"
            },
            "class": "ExpLookitDialoguePage",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-dialogue-page/component.js",
            "line": 547,
            "description": "When one of the images is clicked during a choice frame",
            "itemtype": "event",
            "name": "clickSpeaker",
            "params": [
                {
                    "name": "imageId",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "ExpLookitDialoguePage",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-dialogue-page/component.js",
            "line": 578,
            "description": "When image audio is started",
            "itemtype": "event",
            "name": "startSpeakerAudio",
            "params": [
                {
                    "name": "imageId",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "ExpLookitDialoguePage",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-dialogue-page/component.js",
            "line": 597,
            "description": "When image audio is played (recorded even if not completed)",
            "itemtype": "event",
            "name": "playSpeakerAudio",
            "params": [
                {
                    "name": "imageId",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "ExpLookitDialoguePage",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-dialogue-page/component.js",
            "line": 643,
            "description": "When narration audio is completed",
            "itemtype": "event",
            "name": "completeMainAudio",
            "class": "ExpLookitDialoguePage",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-exit-survey/component.js",
            "line": 67,
            "description": "A unique identifier for this item",
            "itemtype": "property",
            "name": "id",
            "type": "String",
            "class": "ExpLookitExitSurvey",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-exit-survey/component.js",
            "line": 75,
            "description": "Object specifying information to show on second page of exit survey, before returning to main Lookit site.",
            "itemtype": "property",
            "name": "debriefing",
            "type": "Object",
            "class": "ExpLookitExitSurvey",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "title",
                    "description": "Title of debriefing page",
                    "type": "String"
                },
                {
                    "name": "text",
                    "description": "Paragraph to show as debriefing",
                    "type": "String"
                },
                {
                    "name": "image",
                    "description": "Object specifying source URL [src] & alt-text [alt] for any image to show during debriefing (optional). Example: `{\n\"src\": \"https://s3.amazonaws.com/lookitcontents/ducks/duck.png\",\n\"alt\": \"Very cute duck\"\n}`",
                    "type": "Object"
                }
            ]
        },
        {
            "file": "addon/components/exp-lookit-exit-survey/component.js",
            "line": 112,
            "description": "Parameters captured and sent to the server",
            "itemtype": "method",
            "name": "serializeContent",
            "params": [
                {
                    "name": "birthDate",
                    "description": "Child's birthdate as entered into exit survey; timestamp string starting YYYY-mm-dd.",
                    "type": "String"
                },
                {
                    "name": "databraryShare",
                    "description": "Whether data can be shared with Databrary: 'yes' or 'no'",
                    "type": "String"
                },
                {
                    "name": "useOfMedia",
                    "description": "Video privacy level: 'private', 'scientific', or 'public'",
                    "type": "String"
                },
                {
                    "name": "withdrawal",
                    "description": "Whether the user checked the box to withdraw video data",
                    "type": "Boolean"
                },
                {
                    "name": "feedback",
                    "description": "Freeform comments entered by parent",
                    "type": "String"
                },
                {
                    "name": "eventTimings",
                    "description": "Only event captured during this frame is 'nextFrame'; example eventTimings value: `[{u'eventType': u'nextFrame', u'timestamp': u'2016-08-03T00:45:37.157Z'}]`",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The payload sent to the server",
                "type": "Object"
            },
            "class": "ExpLookitExitSurvey",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-geometry-alternation/component.js",
            "line": 193,
            "description": "True to use big fat triangle as context figure, or false to use small skinny triangle as context.",
            "itemtype": "property",
            "name": "context",
            "type": "Boolean",
            "default": "true",
            "class": "ExpLookitGeometryAlternation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-geometry-alternation/component.js",
            "line": 204,
            "description": "Whether to put the shape+size alternating stream on the left (other stream alternates only in size)",
            "itemtype": "property",
            "name": "altOnLeft",
            "type": "Boolean",
            "default": "true",
            "class": "ExpLookitGeometryAlternation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-geometry-alternation/component.js",
            "line": 215,
            "description": "color of triangle outline (3 or 6 char hex, starting with #)",
            "itemtype": "property",
            "name": "triangleColor",
            "type": "String",
            "default": "'#056090'",
            "class": "ExpLookitGeometryAlternation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-geometry-alternation/component.js",
            "line": 226,
            "description": "triangle line width in pixels",
            "itemtype": "property",
            "name": "triangleLineWidth",
            "type": "Integer",
            "default": "5",
            "class": "ExpLookitGeometryAlternation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-geometry-alternation/component.js",
            "line": 237,
            "description": "minimum amount of time to show attention-getter in seconds",
            "itemtype": "property",
            "name": "attnLength",
            "type": "Number",
            "default": "5",
            "class": "ExpLookitGeometryAlternation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-geometry-alternation/component.js",
            "line": 248,
            "description": "length of alternation trial in seconds",
            "itemtype": "property",
            "name": "trialLength",
            "type": "Number",
            "default": "6",
            "class": "ExpLookitGeometryAlternation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-geometry-alternation/component.js",
            "line": 259,
            "description": "length of single calibration segment in ms",
            "itemtype": "property",
            "name": "calibrationLength",
            "type": "Number",
            "default": "3000",
            "class": "ExpLookitGeometryAlternation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-geometry-alternation/component.js",
            "line": 270,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\ninstructions during attention-getter video",
            "itemtype": "property",
            "name": "audioSources",
            "type": "Object[]",
            "class": "ExpLookitGeometryAlternation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-geometry-alternation/component.js",
            "line": 292,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\nmusic during trial",
            "itemtype": "property",
            "name": "musicSources",
            "type": "Object[]",
            "class": "ExpLookitGeometryAlternation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-geometry-alternation/component.js",
            "line": 314,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\naudio after completion of trial (optional; used for last\ntrial \"okay to open your eyes now\" announcement)",
            "itemtype": "property",
            "name": "endAudioSources",
            "type": "Object[]",
            "class": "ExpLookitGeometryAlternation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-geometry-alternation/component.js",
            "line": 337,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\ncalibration audio (played 4 times during calibration)",
            "itemtype": "property",
            "name": "calibrationAudioSources",
            "type": "Object[]",
            "class": "ExpLookitGeometryAlternation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-geometry-alternation/component.js",
            "line": 359,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\ncalibration video (played from start 4 times during\ncalibration)",
            "itemtype": "property",
            "name": "calibrationVideoSources",
            "type": "Object[]",
            "class": "ExpLookitGeometryAlternation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-geometry-alternation/component.js",
            "line": 382,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\nattention-getter video (should be loopable)",
            "itemtype": "property",
            "name": "videoSources",
            "type": "Object[]",
            "class": "ExpLookitGeometryAlternation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-geometry-alternation/component.js",
            "line": 404,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\naudio played upon pausing study",
            "itemtype": "property",
            "name": "pauseAudio",
            "type": "Object[]",
            "class": "ExpLookitGeometryAlternation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-geometry-alternation/component.js",
            "line": 426,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\naudio played upon unpausing study",
            "itemtype": "property",
            "name": "unpauseAudio",
            "type": "Object[]",
            "class": "ExpLookitGeometryAlternation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-geometry-alternation/component.js",
            "line": 448,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\naudio played when study is paused due to not being fullscreen",
            "itemtype": "property",
            "name": "fsAudio",
            "type": "Object[]",
            "class": "ExpLookitGeometryAlternation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-geometry-alternation/component.js",
            "line": 474,
            "description": "Parameters captured and sent to the server",
            "itemtype": "method",
            "name": "serializeContent",
            "params": [
                {
                    "name": "context",
                    "description": "True to use big fat triangle as context figure, or false to use small skinny triangle as context. [same as passed to this frame]",
                    "type": "Boolean"
                },
                {
                    "name": "altOnLeft",
                    "description": "Whether to put the shape+size alternating stream on the left (other stream alternates only in size) [same as passed to this frame]",
                    "type": "Boolean"
                },
                {
                    "name": "videoID",
                    "description": "The ID of any video recorded during this frame",
                    "type": "String"
                },
                {
                    "name": "hasBeenPaused",
                    "description": "whether this trial was paused",
                    "type": "Boolean"
                },
                {
                    "name": "eventTimings",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The payload sent to the server",
                "type": "Object"
            },
            "class": "ExpLookitGeometryAlternation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-geometry-alternation/component.js",
            "line": 530,
            "description": "Just before stopping webcam video capture",
            "itemtype": "event",
            "name": "stoppingCapture",
            "class": "ExpLookitGeometryAlternation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-geometry-alternation/component.js",
            "line": 548,
            "description": "Immediately before starting intro/announcement segment",
            "itemtype": "event",
            "name": "startIntro",
            "class": "ExpLookitGeometryAlternation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-geometry-alternation/component.js",
            "line": 583,
            "description": "Start of EACH calibration segment",
            "itemtype": "event",
            "name": "startCalibration",
            "params": [
                {
                    "name": "location",
                    "description": "location of calibration ball, relative to child: 'left', 'right', or 'center'",
                    "type": "String"
                }
            ],
            "class": "ExpLookitGeometryAlternation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-geometry-alternation/component.js",
            "line": 612,
            "description": "Immediately before starting test trial segment",
            "itemtype": "event",
            "name": "startTestTrial",
            "class": "ExpLookitGeometryAlternation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-geometry-alternation/component.js",
            "line": 660,
            "description": "records EACH triangle presentation during test trial",
            "itemtype": "event",
            "name": "videoStreamConnection",
            "params": [
                {
                    "name": "Lshape",
                    "description": "shape of left triangle: 'skinny' or 'fat'",
                    "type": "String"
                },
                {
                    "name": "Rshape",
                    "description": "shape of right triangle: 'skinny' or 'fat'",
                    "type": "String"
                },
                {
                    "name": "LX",
                    "description": "Horizontal offset of left triangle from rectangle center, in units where rectangle width = 70; positive = to right",
                    "type": "Number"
                },
                {
                    "name": "LY",
                    "description": "Vertical offset of left triangle from rectangle center, in units where rectangle height = 100.8; positive = down",
                    "type": "Number"
                },
                {
                    "name": "RX",
                    "description": "Horizontal offset of right triangle from rectangle center, in units where screen width = 200 and rectangle width = 70; positive = to right",
                    "type": "Number"
                },
                {
                    "name": "RY",
                    "description": "Vertical offset of right triangle from rectangle center, in units where rectangle height = 100.8; positive = down",
                    "type": "Number"
                },
                {
                    "name": "LRot",
                    "description": "rotation of left triangle in degrees. 0 degrees has long side horizontal and 15 degree angle (skinny triangle) or 60 degree angle (fat triangle) on left.",
                    "type": "Number"
                },
                {
                    "name": "RRot",
                    "description": "rotation of right triangle in degrees. 0 degrees has long side horizontal and 15 degree angle (skinny triangle) or 60 degree angle (fat triangle) on left.",
                    "type": "Number"
                },
                {
                    "name": "LFlip",
                    "description": "whether left triangle is flipped (1 = no, -1 = yes)",
                    "type": "Number"
                },
                {
                    "name": "RFlip",
                    "description": "whether right triangle is flipped (1 = no, -1 = yes)",
                    "type": "Number"
                },
                {
                    "name": "LSize",
                    "description": "size of left triangle, relative to standard ('standard' sizes are set so that areas of skinny & fat triangles are equal), in terms of side length (e.g. for a rectangle, 2 would mean take a 1x3 rectangle and make it a 2x6 rectangle, quadrupling the area)",
                    "type": "Number"
                },
                {
                    "name": "RSize",
                    "description": "size of right triangle, relative to standard ('standard' sizes are set so that areas of skinny & fat triangles are equal), in terms of side length (e.g. for a rectangle, 2 would mean take a 1x3 rectangle and make it a 2x6 rectangle, quadrupling the area)",
                    "type": "Number"
                }
            ],
            "class": "ExpLookitGeometryAlternation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-geometry-alternation/component.js",
            "line": 706,
            "description": "Records each time triangles are cleared from display",
            "itemtype": "event",
            "name": "clearTriangles",
            "class": "ExpLookitGeometryAlternation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-geometry-alternation/component.js",
            "line": 888,
            "description": "When video recorder has been installed",
            "itemtype": "event",
            "name": "recorderReady",
            "class": "ExpLookitGeometryAlternation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-instructions/component.js",
            "line": 118,
            "description": "A unique identifier for this item",
            "itemtype": "property",
            "name": "id",
            "type": "String",
            "class": "ExpLookitInstructions",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-instructions/component.js",
            "line": 127,
            "description": "Whether to display the user's webcam",
            "itemtype": "property",
            "name": "showWebcam",
            "type": "Boolean",
            "default": "false",
            "class": "ExpLookitInstructions",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-instructions/component.js",
            "line": 139,
            "description": "Array of blocks for {{#crossLink \"ExpTextBlock\"}}{{/crossLink}}, specifying text/images of instructions to display",
            "itemtype": "property",
            "name": "blocks",
            "type": "Object[]",
            "class": "ExpLookitInstructions",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "title",
                    "description": "Title of this section",
                    "type": "String"
                },
                {
                    "name": "text",
                    "description": "Paragraph text of this section",
                    "type": "String"
                },
                {
                    "name": "listblocks",
                    "description": "Object specifying bulleted points for this section. Each object is of the form:\n  {text: 'text of bullet point', image: {src: 'url', alt: 'alt-text'}}. Images are optional.",
                    "type": "Object[]"
                },
                {
                    "name": "mediaBlock",
                    "description": "Object specifying audio or video clip to include (optional). mediaBlock should be of form:\n  {title: 'title text to show above audio', text: 'text to show below controls', warningText: 'Text to show in red if user tries to proceed but hasn't played; only used if mustPlay is true', sources: 'sources Array of {src: 'url', type: 'MIMEtype'} objects specifying audio sources', isVideo: 'boolean, whether video or audio', mustPlay: 'boolean, whether clip has to be played to proceed'}",
                    "type": "Object"
                }
            ]
        },
        {
            "file": "addon/components/exp-lookit-instructions/component.js",
            "line": 225,
            "description": "Array of objects specifying text/images of instructions to display under webcam view (if webcam is shown)",
            "itemtype": "property",
            "name": "blocks",
            "type": "Object[]",
            "class": "ExpLookitInstructions",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "title",
                    "description": "Title of this section",
                    "type": "String"
                },
                {
                    "name": "text",
                    "description": "Paragraph text of this section",
                    "type": "String"
                },
                {
                    "name": "listblocks",
                    "description": "Object specifying bulleted points for this section. Each object is of the form:\n  {text: 'text of bullet point', image: {src: 'url', alt: 'alt-text'}}. Images are optional.",
                    "type": "Object[]"
                }
            ]
        },
        {
            "file": "addon/components/exp-lookit-instructions/component.js",
            "line": 271,
            "description": "Whether to show a 'previous' button",
            "itemtype": "property",
            "name": "showPreviousButton",
            "type": "Boolean",
            "default": "true",
            "class": "ExpLookitInstructions",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-instructions/component.js",
            "line": 281,
            "description": "Text to display on the 'next frame' button",
            "itemtype": "property",
            "name": "nextButtonText",
            "type": "String",
            "default": "'Start the videos! \\n (You\\'ll have a moment to turn around.)'",
            "class": "ExpLookitInstructions",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-instructions/component.js",
            "line": 295,
            "description": "Parameters captured and sent to the server",
            "itemtype": "method",
            "name": "serializeContent",
            "params": [
                {
                    "name": "showWarning",
                    "description": "whether the warning about sound being played is currently shown",
                    "type": "Boolean"
                },
                {
                    "name": "didFinishSound",
                    "description": "whether the user played the sound clip",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "The payload sent to the server",
                "type": "Object"
            },
            "class": "ExpLookitInstructions",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-mood-questionnaire/component.js",
            "line": 118,
            "description": "A unique identifier for this item",
            "itemtype": "property",
            "name": "id",
            "type": "String",
            "class": "ExpLookitMoodQuestionnaire",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-mood-questionnaire/component.js",
            "line": 127,
            "description": "Intro paragraph describing why we want mood info",
            "itemtype": "property",
            "name": "introText",
            "type": "String",
            "default": "'How are you two doing? We really want to know: we’re interested in how your child’s mood affects his or her looking preferences.'",
            "class": "ExpLookitMoodQuestionnaire",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-mood-questionnaire/component.js",
            "line": 142,
            "description": "Parameters captured and sent to the server",
            "itemtype": "method",
            "name": "serializeContent",
            "params": [
                {
                    "name": "rested",
                    "description": "Rating for CHILD on tired - rested scale, '1' to '7' where '7' is rested",
                    "type": "String"
                },
                {
                    "name": "healthy",
                    "description": "Rating for CHILD on sick - healthy scale, '1' to '7' where '7' is healthy",
                    "type": "String"
                },
                {
                    "name": "childHappy",
                    "description": "Rating for CHILD on fussy - happy scale, '1' to '7' where '7' is happy",
                    "type": "String"
                },
                {
                    "name": "active",
                    "description": "Rating for CHILD on calm - active scale, '1' to '7' where '7' is active",
                    "type": "String"
                },
                {
                    "name": "energetic",
                    "description": "Rating for PARENT on tired - energetic scale, '1' to '7' where '7' is energetic",
                    "type": "String"
                },
                {
                    "name": "ontopofstuff",
                    "description": "Rating for PARENT on overwhelmed - on top of stuff scale, '1' to '7' where '7' is on top of stuff",
                    "type": "String"
                },
                {
                    "name": "healthy",
                    "description": "Rating for PARENT on upset - happy scale, '1' to '7' where '7' is happy",
                    "type": "String"
                },
                {
                    "name": "napWakeUp",
                    "description": "how long since the child woke up from nap, HH:mm",
                    "type": "String"
                },
                {
                    "name": "usualNapSchedule",
                    "description": "whether the child has a typical nap schedule: 'no', 'yes', or 'yes-overdue' if child is overdue for nap",
                    "type": "String"
                },
                {
                    "name": "nextNap",
                    "description": "only valid if usualNapSchedule is 'yes';  how long until child is due to sleep again, HH:mm",
                    "type": "String"
                },
                {
                    "name": "lastEat",
                    "description": "how long since the child ate/drank, HH:mm",
                    "type": "String"
                },
                {
                    "name": "doingBefore",
                    "description": "what the child was doing before this (free response)",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The payload sent to the server",
                "type": "Object"
            },
            "class": "ExpLookitMoodQuestionnaire",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-observation/component.js",
            "line": 76,
            "description": "Array of blocks for {{#crossLink \"ExpTextBlock\"}}{{/crossLink}}, specifying text/images of instructions to display",
            "itemtype": "property",
            "name": "blocks",
            "type": "Object[]",
            "class": "ExpLookitObservation",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "title",
                    "description": "Title of this section",
                    "type": "String"
                },
                {
                    "name": "text",
                    "description": "Paragraph text of this section",
                    "type": "String"
                },
                {
                    "name": "listblocks",
                    "description": "Object specifying bulleted points for this section. Each object is of the form:\n  {text: 'text of bullet point', image: {src: 'url', alt: 'alt-text'}}. Images are optional.",
                    "type": "Object[]"
                }
            ]
        },
        {
            "file": "addon/components/exp-lookit-observation/component.js",
            "line": 122,
            "description": "Number of seconds to record for before automatically pausing. Use\n0 for no limit.",
            "itemtype": "property",
            "name": "recordSegmentLength",
            "type": "String",
            "default": "300",
            "class": "ExpLookitObservation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-observation/component.js",
            "line": 133,
            "description": "Whether to automatically begin recording upon frame load",
            "itemtype": "property",
            "name": "startRecordingAutomatically",
            "type": "Boolean",
            "default": "false",
            "class": "ExpLookitObservation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-observation/component.js",
            "line": 143,
            "description": "Whether to hide video recording controls (only use with startRecordingAutomatically)",
            "itemtype": "property",
            "name": "hideControls",
            "type": "Boolean",
            "default": "false",
            "class": "ExpLookitObservation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-observation/component.js",
            "line": 153,
            "description": "Whether to hide webcam view when frame loads (participant will still be able to show manually)",
            "itemtype": "property",
            "name": "hideWebcam",
            "type": "Boolean",
            "default": "false",
            "class": "ExpLookitObservation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-observation/component.js",
            "line": 163,
            "description": "Text to display on the 'next frame' button",
            "itemtype": "property",
            "name": "nextButtonText",
            "type": "String",
            "default": "'Next'",
            "class": "ExpLookitObservation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-observation/component.js",
            "line": 173,
            "description": "Whether to show a 'previous' button",
            "itemtype": "property",
            "name": "showPreviousButton",
            "type": "Boolean",
            "default": "true",
            "class": "ExpLookitObservation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-observation/component.js",
            "line": 186,
            "description": "Parameters captured and sent to the server",
            "itemtype": "method",
            "name": "serializeContent",
            "params": [
                {
                    "name": "videoID",
                    "description": "The ID of any webcam video recorded during this frame",
                    "type": "String"
                },
                {
                    "name": "videoList",
                    "description": "a list of webcam video IDs in case there are >1",
                    "type": "List"
                },
                {
                    "name": "eventTimings",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The payload sent to the server",
                "type": "Object"
            },
            "class": "ExpLookitObservation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-observation/component.js",
            "line": 249,
            "description": "Video recording automatically paused upon reaching time limit",
            "itemtype": "event",
            "name": "recorderTimeout",
            "class": "ExpLookitObservation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-preferential-looking/component.js",
            "line": 200,
            "description": "Array of objects specifying video src and type for test video (these should be the same video, but multiple sources--e.g. mp4 and webm--are generally needed for cross-browser support). If none provided, skip test phase.\n\nExample value:\n\n```[{'src': 'http://.../video1.mp4', 'type': 'video/mp4'}, {'src': 'http://.../video1.webm', 'type': 'video/webm'}]```",
            "itemtype": "property",
            "name": "testVideo",
            "type": "Array",
            "default": "[]",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "src",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ]
        },
        {
            "file": "addon/components/exp-lookit-preferential-looking/component.js",
            "line": 217,
            "description": "Array of objects specifying video src and type for alternate test video, as for testVideo. Alternate test video will be shown if the first test is paused, after restarting the trial. If alternate test video is also paused, we just move on. If altTestVideo is not provided, defaults to playing same test video again (but still only one pause of test video allowed per trial).",
            "itemtype": "property",
            "name": "altTestVideo",
            "type": "Array",
            "default": "[]",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "src",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ]
        },
        {
            "file": "addon/components/exp-lookit-preferential-looking/component.js",
            "line": 230,
            "description": "Array of objects specifying intro video src and type, as for testVideo.\nIf empty, intro segment will be skipped.",
            "itemtype": "property",
            "name": "introVideo",
            "type": "Array",
            "default": "[]",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "src",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ]
        },
        {
            "file": "addon/components/exp-lookit-preferential-looking/component.js",
            "line": 244,
            "description": "Array of objects specifying attention-grabber video src and type, as for testVideo. The attention-grabber video is shown (looping) during the announcement phase and when the study is paused.",
            "itemtype": "property",
            "name": "announcementVideo",
            "type": "Array",
            "default": "[]",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "src",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ]
        },
        {
            "file": "addon/components/exp-lookit-preferential-looking/component.js",
            "line": 256,
            "description": "minimum amount of time to show attention-getter in seconds. Announcement phase (attention-getter plus audio) will last the minimum of announcementLength and the duration of any announcement audio.",
            "itemtype": "property",
            "name": "announcementLength",
            "type": "Number",
            "default": "2",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-preferential-looking/component.js",
            "line": 267,
            "description": "List of objects specifying intro announcement src and type. If empty and minimum announcementLength is 0, announcement is skipped.\nExample: `[{'src': 'http://.../audio1.mp3', 'type': 'audio/mp3'}, {'src': 'http://.../audio1.ogg', 'type': 'audio/ogg'}]`",
            "itemtype": "property",
            "name": "announcementAudio",
            "type": "Array",
            "default": "[]",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "src",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ]
        },
        {
            "file": "addon/components/exp-lookit-preferential-looking/component.js",
            "line": 281,
            "description": "URL of image to show on left, if any. Can be a full URL or a\nstub that will be appended to `baseDir` + `img/` (see\nbaseDir).",
            "itemtype": "property",
            "name": "leftImage",
            "type": "String",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-preferential-looking/component.js",
            "line": 292,
            "description": "URL of image to show on right, if any. Can be a full URL or a\nstub that will be appended to `baseDir` + `img/` (see\nbaseDir).",
            "itemtype": "property",
            "name": "right",
            "type": "String",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-preferential-looking/component.js",
            "line": 303,
            "description": "URL of image to show at center, if any. Can be a full URL or\na stub that will be appended to `baseDir` + `img/` (see\nbaseDir).",
            "itemtype": "property",
            "name": "centerImage",
            "type": "String",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-preferential-looking/component.js",
            "line": 315,
            "description": "List of objects specifying test audio src and type, as for announcementAudio.\nIf empty, no additional test audio is played besides any audio in testVideo.",
            "itemtype": "property",
            "name": "testAudio",
            "type": "Array",
            "default": "[]",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "testAudio",
                    "description": ""
                },
                {
                    "name": "src",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ]
        },
        {
            "file": "addon/components/exp-lookit-preferential-looking/component.js",
            "line": 330,
            "description": "Whether test audio should loop",
            "itemtype": "property",
            "name": "loopTestAudio",
            "type": "Boolean",
            "default": "true",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-preferential-looking/component.js",
            "line": 341,
            "description": "Whether to allow participant to pause study during test. If no, study still\npauses but upon unpausing moves to next trial. If yes, study restarts from\nbeginning upon unpausing (with alternate sources).",
            "itemtype": "property",
            "name": "allowPauseDuringTest",
            "type": "Boolean",
            "default": "true",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-preferential-looking/component.js",
            "line": 354,
            "description": "Length to loop test videos, in seconds. Set if you want a time-based limit. E.g., setting testLength to 20 means that the first 20 seconds of the video will be played, with shorter videos looping until they get to 20s. Leave out or set to Infinity  to play the video through to the end a set number of times instead. If a testLength is set, it overrides any value set in testCount.",
            "itemtype": "property",
            "name": "testLength",
            "type": "Number",
            "default": "Infinity",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-preferential-looking/component.js",
            "line": 365,
            "description": "Number of times to play test video before moving on. This is ignored if\ntestLength is set to a finite value.",
            "itemtype": "property",
            "name": "testCount",
            "type": "Number",
            "default": "1",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-preferential-looking/component.js",
            "line": 377,
            "description": "Whether to do any video recording during this frame. Default true. Set to false for e.g. last frame where just doing an announcement.",
            "itemtype": "property",
            "name": "doRecording",
            "type": "Boolean",
            "default": "true",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-preferential-looking/component.js",
            "line": 387,
            "description": "length of single calibration segment in ms. 0 to skip calibration.",
            "itemtype": "property",
            "name": "calibrationLength",
            "type": "Number",
            "default": "3000",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-preferential-looking/component.js",
            "line": 398,
            "description": "Ordered list of positions to show calibration segment in. Options are\n\"center\", \"left\", \"right\". Ignored if calibrationLength is 0.",
            "itemtype": "property",
            "name": "calibrationPositions",
            "type": "Array",
            "default": "[\"center\", \"left\", \"right\", \"center\"]",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-preferential-looking/component.js",
            "line": 410,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\ncalibration audio (played at each calibration position).\nIgnored if calibrationLength is 0.",
            "itemtype": "property",
            "name": "calibrationAudio",
            "type": "Object[]",
            "default": "[]",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-preferential-looking/component.js",
            "line": 434,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\ncalibration video (played from start at each calibration position).\nIgnored if calibrationLength is 0.",
            "itemtype": "property",
            "name": "calibrationVideo",
            "type": "Object[]",
            "default": "[]",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-preferential-looking/component.js",
            "line": 458,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\naudio played upon pausing study",
            "itemtype": "property",
            "name": "pauseAudio",
            "type": "Object[]",
            "default": "[]",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-preferential-looking/component.js",
            "line": 481,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\naudio played upon unpausing study. Unpausing audio will always be played\nbefore proceeding to next trial, even if this trial will not be redone\n(e.g. because it was paused during test and allowPauseDuringTest is\nset to false)",
            "itemtype": "property",
            "name": "unpauseAudio",
            "type": "Object[]",
            "default": "[]",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-preferential-looking/component.js",
            "line": 507,
            "description": "Text to show under \"Study paused / Press space to resume\" when study is paused.\nDefault: (You'll have a moment to turn around again.)",
            "itemtype": "property",
            "name": "pauseText",
            "type": "String",
            "default": "[]",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-preferential-looking/component.js",
            "line": 520,
            "description": "Base directory for where to find stimuli. Any image src\nvalues that are not full paths will be expanded by prefixing\nwith `baseDir` + `img/`. Any audio/video src values that give\na value for 'stub' rather than 'src' and 'type' will be\nexpanded out to\n`baseDir/avtype/[stub].avtype`, where the potential avtypes\nare given by audioTypes and videoTypes.\n\nNote that baseDir SHOULD include a trailing slash\n(e.g., `http://stimuli.org/myexperiment/`, not\n`http://stimuli.org/myexperiment`)",
            "itemtype": "property",
            "name": "baseDir",
            "type": "String",
            "default": "''",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-preferential-looking/component.js",
            "line": 541,
            "description": "List of audio types to expect for any audio specified just\nwith a string rather than with a list of src/type pairs.\nIf audioTypes is ['typeA', 'typeB'] and an audio source\nis given as [{'stub': 'intro'}], the audio source will be\nexpanded out to\n\n```json\n                [\n                       {\n                           src: 'baseDir' + 'typeA/intro.typeA',\n                           type: 'audio/typeA'\n                       },\n                       {\n                           src: 'baseDir' + 'typeB/intro.typeB',\n                           type: 'audio/typeB'\n                       }\n               ]\n```",
            "itemtype": "property",
            "name": "audioTypes",
            "type": "String[]",
            "default": "['mp3', 'ogg']",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-preferential-looking/component.js",
            "line": 569,
            "description": "List of video types to expect for any video specified just\nwith a string rather than with a list of src/type pairs.\nIf audioTypes is ['typeA', 'typeB'] and an video source\nis given as [{'stub': 'intro'}], the video source will be\nexpanded out to\n\n```json\n                [\n                       {\n                           src: 'baseDir' + 'typeA/intro.typeA',\n                           type: 'audio/typeA'\n                       },\n                       {\n                           src: 'baseDir' + 'typeB/intro.typeB',\n                           type: 'audio/typeB'\n                       }\n               ]\n```",
            "itemtype": "property",
            "name": "videoTypes",
            "type": "String[]",
            "default": "['mp4', 'webm']",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-preferential-looking/component.js",
            "line": 601,
            "description": "Parameters captured and sent to the server",
            "itemtype": "method",
            "name": "serializeContent",
            "params": [
                {
                    "name": "videosShown",
                    "description": "Sources of videos (potentially) shown during this trial: [source of test video, source of alternate test video].",
                    "type": "Array"
                },
                {
                    "name": "eventTimings",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "videoID",
                    "description": "The ID of any webcam video recorded during this frame",
                    "type": "String"
                },
                {
                    "name": "rightImage",
                    "description": "URL of image shown on right (given as a property of the frame)",
                    "type": "String"
                },
                {
                    "name": "leftImage",
                    "description": "URL of image shown on left (given as a property of the frame)",
                    "type": "String"
                },
                {
                    "name": "centerImage",
                    "description": "URL of image shown at center (given as a property of the frame)",
                    "type": "String"
                },
                {
                    "name": "testLength",
                    "description": "seconds to display images/loop videos (given as a property of the frame), if using time-based limit",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The payload sent to the server",
                "type": "Object"
            },
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-preferential-looking/component.js",
            "line": 849,
            "description": "Start of EACH calibration segment",
            "itemtype": "event",
            "name": "startCalibration",
            "params": [
                {
                    "name": "location",
                    "description": "location of calibration ball, relative to child: 'left', 'right', or 'center'",
                    "type": "String"
                }
            ],
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-preferential-looking/component.js",
            "line": 1075,
            "description": "Observer that starts recording once recorder is ready. Override to do additional\nstuff at this point!",
            "itemtype": "method",
            "name": "whenPossibleToRecord",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-preview-explanation/component.js",
            "line": 52,
            "description": "A unique identifier for this item",
            "itemtype": "property",
            "name": "id",
            "type": "String",
            "class": "ExpLookitPreviewExplanation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-preview-explanation/component.js",
            "line": 61,
            "description": "Whether to show a 'previous' button",
            "itemtype": "property",
            "name": "showPreviousButton",
            "type": "Boolean",
            "default": "true",
            "class": "ExpLookitPreviewExplanation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-preview-explanation/component.js",
            "line": 71,
            "description": "Array of text blocks (paragraphs) to display after the image.",
            "itemtype": "property",
            "name": "blocks",
            "type": "Object",
            "class": "ExpLookitPreviewExplanation",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "title",
                    "description": "title to display",
                    "type": "String"
                },
                {
                    "name": "text",
                    "description": "paragraph of text",
                    "type": "String"
                },
                {
                    "name": "emph",
                    "description": "whether to bold this paragraph",
                    "type": "Boolean"
                }
            ]
        },
        {
            "file": "addon/components/exp-lookit-preview-explanation/component.js",
            "line": 97,
            "description": "Object specifying first block of text (pre-image) to display.",
            "itemtype": "property",
            "name": "introBlock",
            "type": "Object",
            "class": "ExpLookitPreviewExplanation",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "title",
                    "description": "title to display",
                    "type": "String"
                },
                {
                    "name": "text",
                    "description": "paragraph of text",
                    "type": "String"
                },
                {
                    "name": "emph",
                    "description": "whether to bold this paragraph",
                    "type": "Boolean"
                }
            ]
        },
        {
            "file": "addon/components/exp-lookit-preview-explanation/component.js",
            "line": 119,
            "description": "Image to display after the intro block. (Displayed centered,\nwith border, max height 220px.) E.g., a picture of a parent\nholding a child looking over their shoulder.",
            "itemtype": "property",
            "name": "image",
            "type": "Object",
            "class": "ExpLookitPreviewExplanation",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "src",
                    "description": "URL of image",
                    "type": "String"
                },
                {
                    "name": "alt",
                    "description": "alt-text",
                    "type": "String"
                }
            ]
        },
        {
            "file": "addon/components/exp-lookit-preview-explanation/component.js",
            "line": 139,
            "description": "Text to display on the button to go to the next frame",
            "itemtype": "property",
            "name": "previewButtonText",
            "type": "String",
            "default": "'I\\'d like to preview the videos'",
            "class": "ExpLookitPreviewExplanation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-preview-explanation/component.js",
            "line": 149,
            "description": "Text to display on the button to skip the next frame",
            "itemtype": "property",
            "name": "skipButtonText",
            "type": "String",
            "default": "'Skip preview'",
            "class": "ExpLookitPreviewExplanation",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-story-page/component.js",
            "line": 124,
            "description": "Whether to do webcam recording (will wait for webcam\nconnection before starting audio if so)",
            "itemtype": "property",
            "name": "doRecording",
            "type": "Boolean",
            "class": "ExpLookitStoryPage",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-story-page/component.js",
            "line": 134,
            "description": "Whether to proceed automatically after audio (and hide\nreplay/next buttons)",
            "itemtype": "property",
            "name": "autoProceed",
            "type": "Boolean",
            "class": "ExpLookitStoryPage",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-story-page/component.js",
            "line": 144,
            "description": "Base directory for where to find stimuli. Any image src\nvalues that are not full paths will be expanded by prefixing\nwith `baseDir` + `img/`. Any audio/video src values that give\na value for 'stub' rather than 'src' and 'type' will be\nexpanded out to\n`baseDir/avtype/[stub].avtype`, where the potential avtypes\nare given by audioTypes and videoTypes.\n\nNote that baseDir SHOULD include a trailing slash\n(e.g., `http://stimuli.org/myexperiment/`, not\n`http://stimuli.org/myexperiment`)",
            "itemtype": "property",
            "name": "baseDir",
            "type": "String",
            "default": "''",
            "class": "ExpLookitStoryPage",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-story-page/component.js",
            "line": 165,
            "description": "List of audio types to expect for any audio specified just\nwith a string rather than with a list of src/type pairs.\nIf audioTypes is ['typeA', 'typeB'] and an audio source\nis given as [{'stub': 'intro'}], the audio source will be\nexpanded out to\n\n```json\n                [\n                       {\n                           src: 'baseDir' + 'typeA/intro.typeA',\n                           type: 'audio/typeA'\n                       },\n                       {\n                           src: 'baseDir' + 'typeB/intro.typeB',\n                           type: 'audio/typeB'\n                       }\n               ]\n```",
            "itemtype": "property",
            "name": "audioTypes",
            "type": "String[]",
            "default": "['mp3', 'ogg']",
            "class": "ExpLookitStoryPage",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-story-page/component.js",
            "line": 193,
            "description": "Array of objects describing audio to play at the start of\nthis frame. Each element describes a separate audio segment.",
            "itemtype": "property",
            "name": "audioSources",
            "type": "Object[]",
            "class": "ExpLookitStoryPage",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "audioId",
                    "description": "unique string identifying this\n     audio segment",
                    "type": "String"
                },
                {
                    "name": "sources",
                    "description": "Array of {src: 'url', type:\n     'MIMEtype'} objects with audio sources for this segment\n\nCan also give a single element {stub: 'filename'}, which will\nbe expanded out to the appropriate array based on `baseDir`\nand `audioTypes` values; see `audioTypes`.",
                    "type": "Object[]"
                },
                {
                    "name": "highlights",
                    "description": "Array of {'range': [startT,\n     endT], 'image': 'imageId'} objects, where the imageId\n     values correspond to the ids given in images",
                    "type": "Object[]"
                }
            ]
        },
        {
            "file": "addon/components/exp-lookit-story-page/component.js",
            "line": 258,
            "description": "Text block to display to parent.  (Each field is optional)",
            "itemtype": "property",
            "name": "parentTextBlock",
            "type": "Object",
            "class": "ExpLookitStoryPage",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "title",
                    "description": "title to display",
                    "type": "String"
                },
                {
                    "name": "text",
                    "description": "paragraph of text",
                    "type": "String"
                },
                {
                    "name": "emph",
                    "description": "whether to bold this paragraph",
                    "type": "Boolean"
                },
                {
                    "name": "css",
                    "description": "object specifying any css properties\n     to apply to this section, and their values - e.g.\n     {'color': 'red', 'font-size': '12px'}",
                    "type": "Object"
                }
            ]
        },
        {
            "file": "addon/components/exp-lookit-story-page/component.js",
            "line": 288,
            "description": "Array of images to display and information about their placement",
            "itemtype": "property",
            "name": "images",
            "type": "Object[]",
            "class": "ExpLookitStoryPage",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "id",
                    "description": "unique ID for this image",
                    "type": "String"
                },
                {
                    "name": "src",
                    "description": "URL of image source. This can be a full\n    URL, or relative to baseDir (see baseDir).",
                    "type": "String"
                },
                {
                    "name": "left",
                    "description": "left margin, as percentage of story area width",
                    "type": "String"
                },
                {
                    "name": "width",
                    "description": "image width, as percentage of story area width",
                    "type": "String"
                },
                {
                    "name": "top",
                    "description": "top margin, as percentage of story area height",
                    "type": "String"
                }
            ]
        },
        {
            "file": "addon/components/exp-lookit-story-page/component.js",
            "line": 327,
            "description": "Parameters captured and sent to the server",
            "itemtype": "method",
            "name": "serializeContent",
            "params": [
                {
                    "name": "eventTimings",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "videoID",
                    "description": "The ID of any webcam video recorded during this frame",
                    "type": "String"
                },
                {
                    "name": "videoList",
                    "description": "a list of webcam video IDs in case there are >1",
                    "type": "List"
                }
            ],
            "return": {
                "description": "The payload sent to the server",
                "type": "Object"
            },
            "class": "ExpLookitStoryPage",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-survey/component.js",
            "line": 143,
            "description": "Whether to show a 'previous' button",
            "itemtype": "property",
            "name": "showPreviousButton",
            "type": "Boolean",
            "default": "true",
            "class": "ExpLookitSurvey",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-survey/component.js",
            "line": 153,
            "description": "Text to display on the 'next frame' button",
            "itemtype": "property",
            "name": "nextButtonText",
            "type": "String",
            "default": "'Next'",
            "class": "ExpLookitSurvey",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-survey/component.js",
            "line": 163,
            "description": "Object specifying the content of the form. This is in the same format as\nthe example definition of the const 'schema' at http://toddjordan.github.io/ember-cli-dynamic-forms/#/demos/data:\na schema and options are designated separately. Each field of the form\nmust be defined in schema. Options may additionally be specified in options.",
            "itemtype": "property",
            "name": "formSchema",
            "type": "Object",
            "class": "ExpLookitSurvey",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "schema",
                    "description": "The schema defines the fields in this form. It has the following properties:\n    'type' (which MUST BE THE STRING 'object'),\n    'title' (a form title for display), and\n    'properties'. 'properties' is an object defining the set of fields in this form and\n        their associated data types, at minimum. Each key:value pair in this object is of\n        the form FIELDNAME:object. The FIELDNAME is something you select; it should be\n        unique within this form. The object contains at least 'type' and 'title' values,\n        as well as any additional desired parameters that belong to the 'Schema' for the\n        desired field described at http://www.alpacajs.org/documentation.html.",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "The options allow additional customization of the forms specified in the schema. This\n        object should have a single key 'fields' mapping to an object. Each key:value pair in this object is of\n        the form FIELDNAME:object, with FIELDNAMEs the same as in the schema.\n        The potential parameters to use are those that belong to the 'Options' for the\n        desired field described at  http://www.alpacajs.org/documentation.html.",
                    "type": "Object"
                }
            ]
        },
        {
            "file": "addon/components/exp-lookit-survey/component.js",
            "line": 199,
            "description": "Parameters captured and sent to the server",
            "itemtype": "method",
            "name": "serializeContent",
            "params": [
                {
                    "name": "formSchema",
                    "description": "The same formSchema that was provided as a parameter to this frame, for ease of analysis if randomizing or iterating on experimental design.",
                    "type": "Object"
                },
                {
                    "name": "formData",
                    "description": "Data corresponding to the fields defined in formSchema['schema']['properties']. The keys of formData are the FIELDNAMEs used there, and the values are the participant's responses. Note that if the participant does not answer a question, that key may be absent, rather than being present with a null value.",
                    "type": "Object"
                },
                {
                    "name": "eventTimings",
                    "description": "Only events captured during this frame are 'nextFrame'/'previousFrame'; example eventTimings value: `[{u'eventType': u'nextFrame', u'timestamp': u'2016-08-03T00:45:37.157Z'}]`",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The payload sent to the server",
                "type": "Object"
            },
            "class": "ExpLookitSurvey",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-text/component.js",
            "line": 48,
            "description": "A unique identifier for this item",
            "itemtype": "property",
            "name": "id",
            "type": "String",
            "class": "ExpLookitText",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-text/component.js",
            "line": 57,
            "description": "Whether to show a 'previous' button",
            "itemtype": "property",
            "name": "showPreviousButton",
            "type": "Boolean",
            "default": "true",
            "class": "ExpLookitText",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-text/component.js",
            "line": 67,
            "description": "Array of text blocks (paragraphs) to display.",
            "itemtype": "property",
            "name": "blocks",
            "type": "Object",
            "class": "ExpLookitText",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "title",
                    "description": "title to display",
                    "type": "String"
                },
                {
                    "name": "text",
                    "description": "paragraph of text",
                    "type": "String"
                },
                {
                    "name": "emph",
                    "description": "whether to bold this paragraph",
                    "type": "Boolean"
                }
            ]
        },
        {
            "file": "addon/components/exp-lookit-video/component.js",
            "line": 203,
            "description": "Array of objects specifying video src and type for test video (these should be the same video, but multiple sources--e.g. mp4 and webm--are generally needed for cross-browser support). If none provided, skip test phase.\n\nExample value:\n\n```[{'src': 'http://.../video1.mp4', 'type': 'video/mp4'}, {'src': 'http://.../video1.webm', 'type': 'video/webm'}]```",
            "itemtype": "property",
            "name": "sources",
            "type": "Array",
            "default": "[]",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "src",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ]
        },
        {
            "file": "addon/components/exp-lookit-video/component.js",
            "line": 220,
            "description": "Array of objects specifying video src and type for alternate test video, as for sources. Alternate test video will be shown if the first test is paused, after restarting the trial. If alternate test video is also paused, we just move on. If altSources is not provided, defaults to playing same test video again (but still only one pause of test video allowed per trial).",
            "itemtype": "property",
            "name": "altSources",
            "type": "Array",
            "default": "[]",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "src",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ]
        },
        {
            "file": "addon/components/exp-lookit-video/component.js",
            "line": 233,
            "description": "Array of objects specifying intro video src and type, as for sources.\nIf empty, intro segment will be skipped.",
            "itemtype": "property",
            "name": "introSources",
            "type": "Array",
            "default": "[]",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "src",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ]
        },
        {
            "file": "addon/components/exp-lookit-video/component.js",
            "line": 247,
            "description": "Array of objects specifying attention-grabber video src and type, as for sources. The attention-grabber video is shown (looping) during the announcement phase and when the study is paused.",
            "itemtype": "property",
            "name": "attnSources",
            "type": "Array",
            "default": "[]",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "src",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ]
        },
        {
            "file": "addon/components/exp-lookit-video/component.js",
            "line": 259,
            "description": "minimum amount of time to show attention-getter in seconds. Announcement phase (attention-getter plus audio) will last the minimum of announceLength and the duration of any announcement audio.",
            "itemtype": "property",
            "name": "announceLength",
            "type": "Number",
            "default": "2",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-video/component.js",
            "line": 270,
            "description": "List of objects specifying intro announcement src and type. If empty and minimum announceLength is 0, announcement is skipped.\nExample: `[{'src': 'http://.../audio1.mp3', 'type': 'audio/mp3'}, {'src': 'http://.../audio1.ogg', 'type': 'audio/ogg'}]`",
            "itemtype": "property",
            "name": "audioSources",
            "type": "Array",
            "default": "[]",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "src",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ]
        },
        {
            "file": "addon/components/exp-lookit-video/component.js",
            "line": 284,
            "description": "List of objects specifying music audio src and type, as for audioSources.\nIf empty, no music is played.",
            "itemtype": "property",
            "name": "musicSources",
            "type": "Array",
            "default": "[]",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "musicSources",
                    "description": ""
                },
                {
                    "name": "src",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ]
        },
        {
            "file": "addon/components/exp-lookit-video/component.js",
            "line": 299,
            "description": "Length to loop test videos, in seconds. Set if you want a time-based limit. E.g., setting testLength to 20 means that the first 20 seconds of the video will be played, with shorter videos looping until they get to 20s. Leave out or set to Infinity  to play the video through to the end a set number of times instead. If a testLength is set, it overrides any value set in testCount.",
            "itemtype": "property",
            "name": "testLength",
            "type": "Number",
            "default": "Infinity",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-video/component.js",
            "line": 310,
            "description": "Number of times to play test video before moving on. This is ignored if\ntestLength is set to a finite value.",
            "itemtype": "property",
            "name": "testCount",
            "type": "Number",
            "default": "1",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-video/component.js",
            "line": 322,
            "description": "Whether to do any video recording during this frame. Default true. Set to false for e.g. last frame where just doing an announcement.",
            "itemtype": "property",
            "name": "doRecording",
            "type": "Boolean",
            "default": "true",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-video/component.js",
            "line": 332,
            "description": "length of single calibration segment in ms. 0 to skip calibration.",
            "itemtype": "property",
            "name": "calibrationLength",
            "type": "Number",
            "default": "3000",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-video/component.js",
            "line": 343,
            "description": "Ordered list of positions to show calibration segment in. Options are\n\"center\", \"left\", \"right\". Ignored if calibrationLength is 0.",
            "itemtype": "property",
            "name": "calibrationPositions",
            "type": "Array",
            "default": "[\"center\", \"left\", \"right\", \"center\"]",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-video/component.js",
            "line": 355,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\ncalibration audio (played at each calibration position).\nIgnored if calibrationLength is 0.",
            "itemtype": "property",
            "name": "calibrationAudioSources",
            "type": "Object[]",
            "default": "[]",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-video/component.js",
            "line": 379,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\ncalibration video (played from start at each calibration position).\nIgnored if calibrationLength is 0.",
            "itemtype": "property",
            "name": "calibrationVideoSources",
            "type": "Object[]",
            "default": "[]",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-video/component.js",
            "line": 403,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\naudio played upon pausing study",
            "itemtype": "property",
            "name": "pauseAudio",
            "type": "Object[]",
            "default": "[]",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-video/component.js",
            "line": 426,
            "description": "Sources Array of {src: 'url', type: 'MIMEtype'} objects for\naudio played upon unpausing study",
            "itemtype": "property",
            "name": "unpauseAudio",
            "type": "Object[]",
            "default": "[]",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-video/component.js",
            "line": 449,
            "description": "Text to show under \"Study paused / Press space to resume\" when study is paused.\nDefault: (You'll have a moment to turn around again.)",
            "itemtype": "property",
            "name": "pauseText",
            "type": "String",
            "default": "[]",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-video/component.js",
            "line": 462,
            "description": "Base directory for where to find stimuli. Any image src\nvalues that are not full paths will be expanded by prefixing\nwith `baseDir` + `img/`. Any audio/video src values that give\na value for 'stub' rather than 'src' and 'type' will be\nexpanded out to\n`baseDir/avtype/[stub].avtype`, where the potential avtypes\nare given by audioTypes and videoTypes.\n\nNote that baseDir SHOULD include a trailing slash\n(e.g., `http://stimuli.org/myexperiment/`, not\n`http://stimuli.org/myexperiment`)",
            "itemtype": "property",
            "name": "baseDir",
            "type": "String",
            "default": "''",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-video/component.js",
            "line": 483,
            "description": "List of audio types to expect for any audio specified just\nwith a string rather than with a list of src/type pairs.\nIf audioTypes is ['typeA', 'typeB'] and an audio source\nis given as [{'stub': 'intro'}], the audio source will be\nexpanded out to\n\n```json\n                [\n                       {\n                           src: 'baseDir' + 'typeA/intro.typeA',\n                           type: 'audio/typeA'\n                       },\n                       {\n                           src: 'baseDir' + 'typeB/intro.typeB',\n                           type: 'audio/typeB'\n                       }\n               ]\n```",
            "itemtype": "property",
            "name": "audioTypes",
            "type": "String[]",
            "default": "['mp3', 'ogg']",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-video/component.js",
            "line": 511,
            "description": "List of video types to expect for any video specified just\nwith a string rather than with a list of src/type pairs.\nIf audioTypes is ['typeA', 'typeB'] and an video source\nis given as [{'stub': 'intro'}], the video source will be\nexpanded out to\n\n```json\n                [\n                       {\n                           src: 'baseDir' + 'typeA/intro.typeA',\n                           type: 'audio/typeA'\n                       },\n                       {\n                           src: 'baseDir' + 'typeB/intro.typeB',\n                           type: 'audio/typeB'\n                       }\n               ]\n```",
            "itemtype": "property",
            "name": "videoTypes",
            "type": "String[]",
            "default": "['mp4', 'webm']",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-video/component.js",
            "line": 543,
            "description": "Parameters captured and sent to the server",
            "itemtype": "method",
            "name": "serializeContent",
            "params": [
                {
                    "name": "videosShown",
                    "description": "Sources of videos (potentially) shown during this trial: [source of test video, source of alternate test video].",
                    "type": "Array"
                },
                {
                    "name": "eventTimings",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "videoID",
                    "description": "The ID of any webcam video recorded during this frame",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The payload sent to the server",
                "type": "Object"
            },
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-video/component.js",
            "line": 755,
            "description": "Start of EACH calibration segment",
            "itemtype": "event",
            "name": "startCalibration",
            "params": [
                {
                    "name": "location",
                    "description": "location of calibration ball, relative to child: 'left', 'right', or 'center'",
                    "type": "String"
                }
            ],
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-video/component.js",
            "line": 951,
            "description": "Observer that starts recording once recorder is ready. Override to do additional\nstuff at this point!",
            "itemtype": "method",
            "name": "whenPossibleToRecord",
            "class": "ExpLookitVideo",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-video-consent/component.js",
            "line": 116,
            "description": "When participant downloads consent form",
            "itemtype": "event",
            "name": "downloadConsentForm",
            "class": "ExpLookitVideoConsent",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-video-consent/component.js",
            "line": 131,
            "description": "A unique identifier for this item",
            "itemtype": "property",
            "name": "id",
            "type": "String",
            "class": "ExpLookitVideoConsent",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-video-consent/component.js",
            "line": 140,
            "description": "Name of PI running this study",
            "itemtype": "property",
            "name": "PIName",
            "type": "String",
            "class": "ExpLookitVideoConsent",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-video-consent/component.js",
            "line": 149,
            "description": "Name of institution running this study (if ambiguous, list institution whose IRB approved the study)",
            "itemtype": "property",
            "name": "institution",
            "type": "String",
            "class": "ExpLookitVideoConsent",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-video-consent/component.js",
            "line": 158,
            "description": "Contact information for PI or lab in case of participant questions or concerns. This will directly follow the phrase \"please contact\", so format accordingly: e.g., \"the XYZ lab at xyz@science.edu\" or \"Mary Smith at 123 456 7890\".",
            "itemtype": "property",
            "name": "PIContact",
            "type": "String",
            "class": "ExpLookitVideoConsent",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-video-consent/component.js",
            "line": 167,
            "description": "Brief description of purpose of study - 1-2 sentences that describe what you are trying to find out. Language should be as straightforward and accessible as possible! E.g., \"Why do babies love cats? This study will help us find out whether babies love cats because of their soft fur or their twitchy tails.\"",
            "itemtype": "property",
            "name": "purpose",
            "type": "String",
            "class": "ExpLookitVideoConsent",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-video-consent/component.js",
            "line": 176,
            "description": "Brief description of study procedures, including any risks or a statement that there are no anticipated risks. We add a statement about the duration (from your study definition) to the start (e.g., \"This study takes about 10 minutes to complete\"), so you don't need to include that. It can be in third person or addressed to the parent. E.g., \"Your child will be shown pictures of lots of different cats, along with noises that cats make like meowing and purring. We are interested in which pictures and sounds make your child smile. We will ask you (the parent) to turn around to avoid influencing your child's responses. There are no anticipated risks associated with participating.\"",
            "itemtype": "property",
            "name": "procedures",
            "type": "String",
            "class": "ExpLookitVideoConsent",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-video-consent/component.js",
            "line": 185,
            "description": "Statement about payment/compensation for participation, including a statement that there are no additional benefits anticipated to the participant. E.g., \"After you finish the study, we will email you a $5 BabyStore gift card within approximately three days. To be eligible for the gift card your child must be in the age range for this study, you need to submit a valid consent statement, and we need to see that there is a child with you. But we will send a gift card even if you do not finish the whole study or we are not able to use your child's data! There are no other direct benefits to you or your child from participating, but we hope you will enjoy the experience.\"",
            "itemtype": "property",
            "name": "payment",
            "type": "String",
            "class": "ExpLookitVideoConsent",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-video-consent/component.js",
            "line": 194,
            "description": "Study-specific data use statement (optional). This will follow the following more general text: \"The research group led by [PIName] at [institution] will have access to video and other data collected during this session. We will also have access to your account profile, demographic survey, and the child profile for the child who is participating, including changes you make in the future to any of this information. We may study your child’s responses in connection with his or her previous responses to this or other studies run by our group, siblings’ responses to this or other studies run by our group, or demographic survey responses.\"\nYou may want to note what measures you will actually be coding for (looking time, facial expressions, parent-child interaction, etc.) and other more specific information about your use of data from this study here. For instance, you would note if you were building a corpus of naturalistic data that may be used to answer a variety of questions (rather than just collecting data for a single planned study).",
            "itemtype": "property",
            "name": "datause",
            "type": "String",
            "class": "ExpLookitVideoConsent",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-lookit-video-consent/component.js",
            "line": 207,
            "description": "Parameters captured and sent to the server",
            "itemtype": "method",
            "name": "serializeContent",
            "params": [
                {
                    "name": "consentFormText",
                    "description": "the exact text shown in the consent document during this frame",
                    "type": "String"
                },
                {
                    "name": "videoID",
                    "description": "The ID of any webcam video recorded during this frame",
                    "type": "String"
                },
                {
                    "name": "videoList",
                    "description": "a list of webcam video IDs in case there are >1",
                    "type": "List"
                },
                {
                    "name": "eventTimings",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The payload sent to the server",
                "type": "Object"
            },
            "class": "ExpLookitVideoConsent",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-player/component.js",
            "line": 53,
            "description": "The message to display in the early exit modal. Newer browsers may not respect this message.",
            "itemtype": "property",
            "name": "messageEarlyExitModal",
            "type": "String|null",
            "class": "ExpPlayer",
            "module": "exp-player",
            "submodule": "components"
        },
        {
            "file": "addon/components/exp-player/component.js",
            "line": 59,
            "description": "Customize what happens when the user exits the page",
            "itemtype": "method",
            "name": "beforeUnload",
            "params": [
                {
                    "name": "event",
                    "description": "The event to be handled",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "If string is provided, triggers a modal to confirm user wants to leave page",
                "type": "String|null"
            },
            "class": "ExpPlayer",
            "module": "exp-player",
            "submodule": "components"
        },
        {
            "file": "addon/components/exp-video-config/component.js",
            "line": 64,
            "description": "A unique identifier for this item",
            "itemtype": "property",
            "name": "id",
            "type": "String",
            "class": "ExpVideoConfig",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-video-config/component.js",
            "line": 72,
            "description": "Text to show as the introduction to the troubleshooting tips section",
            "itemtype": "property",
            "name": "troubleshootingIntro",
            "type": "String",
            "default": "\"Some families are having trouble initially getting their webcams to work on Lookit. We're sorry, and we're working on switching away from Flash to make recording more reliable! In the meantime, these instructions should fix most problems.\"",
            "class": "ExpVideoConfig",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-video-config-quality/component.js",
            "line": 39,
            "description": "A unique identifier for this item",
            "itemtype": "property",
            "name": "id",
            "type": "String",
            "class": "ExpVideoConfigQuality",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-video-consent/component.js",
            "line": 64,
            "description": "A unique identifier for this item",
            "itemtype": "property",
            "name": "id",
            "type": "String",
            "class": "ExpVideoConsent",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-video-consent/component.js",
            "line": 73,
            "description": "Title of the consent document",
            "itemtype": "property",
            "name": "title",
            "type": "String",
            "default": "'Consent to participate in behavioral research: <br> Inference and induction study'",
            "class": "ExpVideoConsent",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-video-consent/component.js",
            "line": 83,
            "description": "Array of paragraphs of the consent document, each with title and text.",
            "itemtype": "property",
            "name": "blocks",
            "type": "Array",
            "default": "[]",
            "class": "ExpVideoConsent",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "title",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "text",
                    "description": "",
                    "type": "String"
                }
            ]
        },
        {
            "file": "addon/components/exp-video-consent/component.js",
            "line": 106,
            "description": "Text the user is asked to read aloud to consent",
            "itemtype": "property",
            "name": "prompt",
            "type": "String",
            "default": "'I consent to participate in this study'",
            "class": "ExpVideoConsent",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-video-consent/component.js",
            "line": 118,
            "description": "Parameters captured and sent to the server",
            "itemtype": "method",
            "name": "serializeContent",
            "params": [
                {
                    "name": "consentFormText",
                    "description": "the exact text shown in the consent document during this frame",
                    "type": "String"
                },
                {
                    "name": "videoID",
                    "description": "The ID of any webcam video recorded during this frame",
                    "type": "String"
                },
                {
                    "name": "videoList",
                    "description": "a list of webcam video IDs in case there are >1",
                    "type": "List"
                },
                {
                    "name": "eventTimings",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The payload sent to the server",
                "type": "Object"
            },
            "class": "ExpVideoConsent",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-video-preview/component.js",
            "line": 102,
            "description": "A series of preview videos to display within a single frame, defined as an array of objects.",
            "itemtype": "property",
            "name": "videos",
            "type": "Array",
            "class": "ExpVideoPreview",
            "module": "exp-player",
            "submodule": "frames",
            "subprops": [
                {
                    "name": "caption",
                    "description": "Some text to appear under this video",
                    "type": "String"
                },
                {
                    "name": "sources",
                    "description": "Array of {src: 'url', type: 'MIMEtype'} objects.",
                    "type": "Object[]"
                },
                {
                    "name": "imgSrc",
                    "description": "URL of image to display (optional; each preview video should designate either sources or imgSrc)",
                    "type": "String"
                }
            ]
        },
        {
            "file": "addon/components/exp-video-preview/component.js",
            "line": 144,
            "description": "Text on the button prompt asking the user to continue to the videos",
            "itemtype": "property",
            "name": "prompt",
            "type": "String",
            "class": "ExpVideoPreview",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-video-preview/component.js",
            "line": 162,
            "description": "Informational text to display to the user before videos are shown, along with button to continue",
            "itemtype": "property",
            "name": "text",
            "type": "String",
            "class": "ExpVideoPreview",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/components/exp-video-preview/component.js",
            "line": 177,
            "description": "Parameters captured and sent to the server",
            "itemtype": "method",
            "name": "serializeContent",
            "params": [
                {
                    "name": "videoID",
                    "description": "The ID of any webcam video recorded during this frame",
                    "type": "String"
                },
                {
                    "name": "videoList",
                    "description": "a list of webcam video IDs in case there are >1",
                    "type": "List"
                },
                {
                    "name": "eventTimings",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The payload sent to the server",
                "type": "Object"
            },
            "class": "ExpVideoPreview",
            "module": "exp-player",
            "submodule": "frames"
        },
        {
            "file": "addon/mixins/full-screen.js",
            "line": 17,
            "description": "The element ID of the thing to make full screen (video element, div, etc)",
            "itemtype": "property",
            "name": "fullScreenElementId",
            "type": "String",
            "class": "FullScreen",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/full-screen.js",
            "line": 24,
            "description": "The element ID of a button to show if the user leaves fullscreen mode",
            "itemtype": "property",
            "name": "fsButtonID",
            "type": "String",
            "class": "FullScreen",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/full-screen.js",
            "line": 76,
            "description": "Upon detecting change to fullscreen mode",
            "itemtype": "event",
            "name": "enteredFullscreen",
            "class": "FullScreen",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/full-screen.js",
            "line": 88,
            "description": "Upon detecting change out of fullscreen mode",
            "itemtype": "event",
            "name": "leftFullscreen",
            "class": "FullScreen",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/full-screen.js",
            "line": 104,
            "description": "Make a specified element fullscreen",
            "itemtype": "method",
            "name": "showFullscreen",
            "class": "FullScreen",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/full-screen.js",
            "line": 137,
            "description": "Exit fullscreen mode",
            "itemtype": "method",
            "name": "exitFullscreen",
            "class": "FullScreen",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/full-screen.js",
            "line": 165,
            "description": "Whether to display this frame as fullscreen, even though it is not\ngenerally used that way.",
            "itemtype": "property",
            "name": "id",
            "type": "String",
            "class": "FullScreen",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/video-record.js",
            "line": 51,
            "description": "When recorder detects a change in camera access",
            "itemtype": "event",
            "name": "hasCamAccess",
            "params": [
                {
                    "name": "hasCamAccess",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "VideoRecordMixin",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/video-record.js",
            "line": 58,
            "description": "When recorder detects a change in video stream connection status",
            "itemtype": "event",
            "name": "videoStreamConnection",
            "params": [
                {
                    "name": "status",
                    "description": "status of video stream connection, e.g.\n'NetConnection.Connect.Success' if successful",
                    "type": "String"
                }
            ],
            "class": "VideoRecordMixin",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/video-record.js",
            "line": 66,
            "description": "When pausing study, immediately before request to pause webcam recording",
            "itemtype": "event",
            "name": "pauseVideo",
            "class": "VideoRecordMixin",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/video-record.js",
            "line": 72,
            "description": "When unpausing study, immediately before request to resume webcam recording",
            "itemtype": "event",
            "name": "unpauseVideo",
            "class": "VideoRecordMixin",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/video-record.js",
            "line": 78,
            "description": "Just before stopping webcam video capture",
            "itemtype": "event",
            "name": "stoppingCapture",
            "class": "VideoRecordMixin",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/video-record.js",
            "line": 86,
            "description": "The recorder object, accessible to the consuming frame. Includes properties\nrecorder.hasWebCam, recorder.hasCamAccess, recorder.micChecked, recorder.connected.",
            "itemtype": "property",
            "name": "recorder",
            "type": "VideoRecorder",
            "class": "VideoRecordMixin",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/video-record.js",
            "line": 95,
            "description": "A list of all video IDs used in this mixing (a new one is created for each recording).\nAccessible to consuming frame.",
            "itemtype": "property",
            "name": "videoList",
            "type": "List",
            "class": "VideoRecordMixin",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/video-record.js",
            "line": 102,
            "description": "Whether recording is stopped already, meaning it doesn't need to be re-stopped when\ndestroying frame. This should be set to true by the consuming frame when video is\nstopped.",
            "itemtype": "property",
            "name": "stoppedRecording",
            "type": "Boolean",
            "class": "VideoRecordMixin",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/video-record.js",
            "line": 110,
            "description": "JQuery string to identify the recorder element.",
            "itemtype": "property",
            "name": "[recorderElement='#recorder']",
            "type": "String",
            "class": "VideoRecordMixin",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/video-record.js",
            "line": 116,
            "description": "Whether recorder has been set up yet. Automatically set when doing setup.\nAccessible to consuming frame.",
            "itemtype": "property",
            "name": "recorderReady",
            "type": "Boolean",
            "class": "VideoRecordMixin",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/video-record.js",
            "line": 123,
            "description": "Whether to use the camera in this frame. Consuming frame should set this property\nto override if needed.",
            "itemtype": "property",
            "name": "[doUseCamera=true]",
            "type": "Boolean",
            "class": "VideoRecordMixin",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/video-record.js",
            "line": 130,
            "description": "Whether to start recording ASAP (only applies if doUseCamera). Consuming frame\nshould set to override if needed.",
            "itemtype": "property",
            "name": "[startRecordingAutomatically=false]",
            "type": "Boolean",
            "class": "VideoRecordMixin",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/video-record.js",
            "line": 137,
            "description": "A video ID to use for the current recording. Format is\n`videoStream_<experimentId>_<frameId>_<sessionId>_timestampMS_RRR`\nwhere RRR are random numeric digits.",
            "itemtype": "property",
            "name": "videoId",
            "type": "String",
            "class": "VideoRecordMixin",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/video-record.js",
            "line": 157,
            "description": "Extend any base time event capture with information about the recorded video",
            "itemtype": "method",
            "name": "makeTimeEvent",
            "params": [
                {
                    "name": "eventName",
                    "description": ""
                },
                {
                    "name": "extra",
                    "description": ""
                }
            ],
            "return": {
                "description": "Event data object",
                "type": "Object"
            },
            "class": "VideoRecordMixin",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/video-record.js",
            "line": 176,
            "description": "Set up a video recorder instance",
            "itemtype": "method",
            "name": "setupRecorder",
            "params": [
                {
                    "name": "element",
                    "description": "A DOM node representing where to mount the recorder",
                    "type": "Node"
                },
                {
                    "name": "record",
                    "description": "Whether to start the recording immediately",
                    "type": "Boolean"
                },
                {
                    "name": "settings",
                    "description": "Config to pass to the newly created VideoRecorder",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "A promise representing the result of installing the recorder",
                "type": "Promise"
            },
            "class": "VideoRecordMixin",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/video-record.js",
            "line": 208,
            "description": "Pause the recorder (and capture timing events). For webRTC recorder, this is\njust a placeholder and doesn't actually pause the recording. If webRTC used,\nincludes extra data actuallyPaused: false. This is for backwards compatibility\nwith frames that pause/resume recording, and should not be used going forward -\ninstead stop/start and make separate clips if needed.",
            "itemtype": "method",
            "name": "pauseRecorder",
            "params": [
                {
                    "name": "skipIfMissing",
                    "description": "If provided (and true), don't raise an error if recording isn't ready yet. Not actually used for WebRTC.",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "VideoRecordMixin",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/video-record.js",
            "line": 228,
            "description": "Resume a paused recording. For webRTC recorder, this is just a placeholder and\ndoesn't actually pause the recording. If webRTC used, includes extra data\nwasActuallyPaused: false. This is for backwards compatibility\nwith frames that pause/resume recording, and should not be used going forward -\ninstead stop/start and make separate clips if needed.",
            "itemtype": "method",
            "name": "resumeRecorder",
            "class": "VideoRecordMixin",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/video-record.js",
            "line": 246,
            "description": "Start recording",
            "itemtype": "method",
            "name": "startRecorder",
            "return": {
                "description": "Promise Resolves when recording has started"
            },
            "class": "VideoRecordMixin",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/video-record.js",
            "line": 267,
            "description": "Stop the recording",
            "itemtype": "method",
            "name": "stopRecorder",
            "return": {
                "description": "Promise A promise that resolves when upload is complete"
            },
            "class": "VideoRecordMixin",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/video-record.js",
            "line": 282,
            "description": "Destroy recorder and stop accessing webcam",
            "itemtype": "method",
            "name": "destroyRecorder",
            "class": "VideoRecordMixin",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/video-record.js",
            "line": 316,
            "description": "When video recorder has been installed",
            "itemtype": "event",
            "name": "recorderReady",
            "class": "VideoRecordMixin",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/video-record.js",
            "line": 329,
            "description": "Observer that starts recording once recorder is ready. Override to do additional\nstuff at this point!",
            "itemtype": "method",
            "name": "whenPossibleToRecord",
            "class": "VideoRecordMixin",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/video-record.js",
            "line": 345,
            "description": "Hide the recorder from display. Useful if you would like to keep recording without extra UI elements to\n  distract the user.",
            "itemtype": "method",
            "name": "hideRecorder",
            "class": "VideoRecordMixin",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/video-record.js",
            "line": 354,
            "description": "Show the recorder to the user. Useful if you want to temporarily show a hidden recorder- eg to let the user fix\n  a problem with video capture settings",
            "itemtype": "method",
            "name": "showRecorder",
            "class": "VideoRecordMixin",
            "module": "exp-player",
            "submodule": "mixins"
        },
        {
            "file": "addon/randomizers/permute.js",
            "line": 59,
            "description": "Unique string identifying this set of frames",
            "itemtype": "property",
            "name": "id",
            "type": "String",
            "class": "permute",
            "module": "exp-player",
            "submodule": "randomizers"
        },
        {
            "file": "addon/randomizers/permute.js",
            "line": 65,
            "description": "List of frames to be created by this randomizer. Each frame is an\nobject with any necessary frame-specific properties specified. The\n'kind' of frame can be specified either here (per frame) or in\ncommonFrameProperties. If a property is defined for a given frame both\nin this frame list and in commonFrameProperties, the value in the frame\nlist will take precedence.\n\n(E.g., you could include 'kind': 'normal-frame' in\ncommmonFrameProperties, but for a single frame in frameOptions, include\n'kind': 'special-frame'.)",
            "itemtype": "property",
            "name": "frameOptions",
            "type": "Object[]",
            "class": "permute",
            "module": "exp-player",
            "submodule": "randomizers"
        },
        {
            "file": "addon/randomizers/permute.js",
            "line": 80,
            "description": "Object describing common parameters to use in EVERY frame created\nby this randomizer. Parameter names and values are as described in\nthe documentation for the frameType used.",
            "itemtype": "property",
            "name": "commonFrameProperties",
            "type": "Object",
            "class": "permute",
            "module": "exp-player",
            "submodule": "randomizers"
        },
        {
            "file": "addon/randomizers/permute.js",
            "line": 115,
            "description": "Parameters captured and sent to the server",
            "itemtype": "method",
            "name": "conditions",
            "params": [
                {
                    "name": "frameList",
                    "description": "the list of frames used, in the final shuffled order",
                    "type": "Object[]"
                }
            ],
            "class": "permute",
            "module": "exp-player",
            "submodule": "randomizers"
        },
        {
            "file": "addon/randomizers/pref-phys.js",
            "line": 15,
            "description": "Select the first matching session from an array of options, according to the specified rules",
            "itemtype": "method",
            "name": "getLastSession",
            "params": [
                {
                    "name": "pastSessions",
                    "description": "An array of session records. This returns the first match, eg assumes newest-first sort order",
                    "type": "Session[]"
                }
            ],
            "return": {
                "description": "The model representing the last session in which the user participated",
                "type": "Session"
            },
            "class": "randomParameterSet",
            "module": "exp-player"
        },
        {
            "file": "addon/randomizers/random-parameter-set.js",
            "line": 190,
            "description": "Object describing common parameters to use in EVERY frame created\nby this randomizer. Parameter names and values are as described in\nthe documentation for the frameType used.",
            "itemtype": "property",
            "name": "commonFrameProperties",
            "type": "Object",
            "class": "randomParameterSet",
            "module": "exp-player",
            "submodule": "randomizers"
        },
        {
            "file": "addon/randomizers/random-parameter-set.js",
            "line": 198,
            "description": "Unique string identifying this set of frames",
            "itemtype": "property",
            "name": "id",
            "type": "String",
            "class": "randomParameterSet",
            "module": "exp-player",
            "submodule": "randomizers"
        },
        {
            "file": "addon/randomizers/random-parameter-set.js",
            "line": 204,
            "description": "List of frames to be created by this randomizer. Each frame is an\nobject with any necessary frame-specific properties specified. The\n'kind' of frame can be specified either here (per frame) or in\ncommonFrameProperties. If a property is defined for a given frame both\nin this frame list and in commonFrameProperties, the value in the frame\nlist will take precedence.\n\n(E.g., you could include 'kind': 'normal-frame' in\ncommmonFrameProperties, but for a single frame in frameList, include\n'kind': 'special-frame'.)\n\nAny property VALUES within any of the frames in this list which match\na property NAME in the selected parameterSet will be replaced by the\ncorresponding parameterSet value. E.g., suppose a frame in frameList is\n\n```\n  {'leftImage': 'LEFTIMAGE1',\n  'rightImage': 'frog.jpg',\n  'size': 'IMAGESIZE'}\n```\n\nand the row that has been selected randomly of parameterSets is\n\n```\n{'LEFTIMAGE1': 'toad.jpg',\n       'LEFTIMAGE2': 'dog.jpg',\n       'IMAGESIZE': 250}\n```\n\nThen the frame would be transformed into:\n```\n  {'leftImage': 'toad.jpg',\n  'rightImage': 'frog.jpg',\n  'size': 250}\n```\n\nThe same values may be applied across multiple frames. For instance,\nsuppose frameList is\n\n```\n      [\n           {\n               'leftImage': 'LEFTIMAGE1',\n               'rightImage': 'frog.jpg',\n               'size': 'IMAGESIZE'\n           },\n           {\n               'leftImage': 'LEFTIMAGE2',\n               'rightImage': 'frog.jpg',\n               'size': 'IMAGESIZE'\n           }\n       ]\n```\n\nThen the corresponding processed frames would include the values\n```\n      [\n           {\n               'leftImage': 'toad.jpg',\n               'rightImage': 'frog.jpg',\n               'size': 250\n           },\n           {\n               'leftImage': 'dog.jpg',\n               'rightImage': 'frog.jpg',\n               'size': 250\n           }\n       ]\n```\nA property value like 'IMAGESIZE' may be placed in a frame definition\nnested within another object (at any depth) or within a list and\nwill still be replaced.",
            "itemtype": "property",
            "name": "frameList",
            "type": "Object[]",
            "class": "randomParameterSet",
            "module": "exp-player",
            "submodule": "randomizers"
        },
        {
            "file": "addon/randomizers/random-parameter-set.js",
            "line": 281,
            "description": "Array of parameter sets to randomly select from in order to determine\nthe parameters for each frame in this session.\n\nA single element of parameterSets will be applied to a given session.",
            "itemtype": "property",
            "name": "parameterSets",
            "type": "Object[]",
            "class": "randomParameterSet",
            "module": "exp-player",
            "submodule": "randomizers"
        },
        {
            "file": "addon/randomizers/random-parameter-set.js",
            "line": 290,
            "description": "[Optional] Array of weights for parameter sets; elements correspond to\nelements of parameterSets. The probability of selecting an element\nparameterSets[i] is parameterSetWeights[i]/sum(parameterSetWeights).\n\nIf not provided, all parameterSets are weighted equally.\n\nThis is intended to allow manual control of counterbalancing during\ndata collection, e.g. to allow one condition to \"catch up\" if it was\nrandomly selected less often.",
            "itemtype": "property",
            "name": "parameterSetWeights",
            "type": "Number[]",
            "class": "randomParameterSet",
            "module": "exp-player",
            "submodule": "randomizers"
        },
        {
            "file": "addon/randomizers/random-parameter-set.js",
            "line": 340,
            "description": "Parameters captured and sent to the server",
            "itemtype": "method",
            "name": "conditions",
            "params": [
                {
                    "name": "conditionNum",
                    "description": "the index of the parameterSet chosen",
                    "type": "Number"
                },
                {
                    "name": "parameterSet",
                    "description": "the parameterSet chosen",
                    "type": "Object"
                }
            ],
            "class": "randomParameterSet",
            "module": "exp-player",
            "submodule": "randomizers"
        },
        {
            "file": "addon/services/video-recorder.js",
            "line": 89,
            "description": "Install a recorder onto the page and optionally begin recording immediately.",
            "itemtype": "method",
            "name": "install",
            "params": [
                {
                    "name": "record",
                    "description": ""
                }
            ],
            "return": {
                "description": "Indicate whether widget was successfully installed and started",
                "type": "Promise"
            },
            "class": "VideoRecorderObject",
            "module": "exp-player",
            "submodule": "services"
        },
        {
            "file": "addon/services/video-recorder.js",
            "line": 149,
            "description": "Start recording a video, and allow the state of the recording to be accessed for later usage",
            "itemtype": "method",
            "name": "record",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "VideoRecorderObject",
            "module": "exp-player",
            "submodule": "services"
        },
        {
            "file": "addon/services/video-recorder.js",
            "line": 184,
            "description": "Get a timestamp based on the current recording position. Useful to ensure that tracked timing events\n line up with the video.",
            "itemtype": "method",
            "name": "getTime",
            "return": {
                "description": "",
                "type": "Date|null"
            },
            "class": "VideoRecorderObject",
            "module": "exp-player",
            "submodule": "services"
        },
        {
            "file": "addon/services/video-recorder.js",
            "line": 198,
            "description": "Stop recording and save the video to the server",
            "itemtype": "method",
            "name": "stop",
            "class": "VideoRecorderObject",
            "module": "exp-player",
            "submodule": "services"
        },
        {
            "file": "addon/services/video-recorder.js",
            "line": 238,
            "description": "Destroy video recorder and remove from list of recorders. Use this to remove\nthe video recorder when destroying a frame, if not triggered via upload.",
            "itemtype": "method",
            "name": "destroy",
            "class": "VideoRecorderObject",
            "module": "exp-player",
            "submodule": "services"
        },
        {
            "file": "addon/services/video-recorder.js",
            "line": 248,
            "description": "Uninstall the video recorder from the page",
            "itemtype": "method",
            "name": "uninstall",
            "class": "VideoRecorderObject",
            "module": "exp-player",
            "submodule": "services"
        }
    ],
    "warnings": []
}